{"meta":{"title":"Xin's Blog","subtitle":"","description":"","author":"Xin","url":"http://example.com","root":"/"},"pages":[{"title":"about","date":"2021-03-31T14:12:35.000Z","updated":"2022-02-22T05:41:19.428Z","comments":true,"path":"about/index.html","permalink":"http://example.com/about/index.html","excerpt":"","text":"123456789Hi there!I&#x27;m glad you found me. So this blog basically records my solutions to problems I met while coding or making projects, and you may also find some other tech notes here too.Some facts about me:- Studying Computer Science in college (I&#x27;m graduating soon);- Passionate about front-end development;- Struggling with my procrastination;- Trying to improve my English language skills.Thanks for reading!Last updated: Feb 2, 2022"},{"title":"categories","date":"2021-04-03T14:13:47.000Z","updated":"2021-04-04T15:15:58.690Z","comments":true,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2021-04-03T14:13:08.000Z","updated":"2021-04-03T14:15:10.244Z","comments":true,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"关于选择器优先级和继承的概念","slug":"CSS1","date":"2021-07-14T16:00:00.000Z","updated":"2021-08-01T10:41:38.891Z","comments":true,"path":"2021/07/15/CSS1/","link":"","permalink":"http://example.com/2021/07/15/CSS1/","excerpt":"","text":"前言最近在读《深入解析CSS》。 读到第2章的时候发现自己对于选择器优先级的概念和继承的概念混为一谈了。 借用第2章“自定义属性”的例子，利用自定义属性为两块面板设置不同的颜色。我的困惑出现在给第二个面板设置不同字体颜色和背景颜色后，第二个面板原来的字体颜色和背景颜色都被新颜色覆盖。 当时的想法是：:root是伪类选择器，优先级相当于类，.dark是类选择器，二者优先级相等，然后考虑代码顺序，但将:root声明块移至.dark下面，发现效果还是和之前一样。为了进一步明确我的困惑，在外层又加了一个id=&quot;test&quot;的div元素，定义了自定义属性，设置不同的颜色，此时#test的优先级高于.dark，总该会出现#test的效果了吧，结果却还是和之前一样。 上面的”折腾“忽略了一个很重要的前提：上述的选择器并非作用于同一个元素。因此考虑它们的优先级是毫无意义的。 HTML部分： 12345678910111213141516171819&lt;body&gt; &lt;div id=&quot;test&quot;&gt; &lt;div class=&quot;panel&quot;&gt; &lt;h2&gt;Single-origin&lt;/h2&gt; &lt;div class=&quot;body&quot;&gt; Lorem ipsum dolor sit amet consectetur adipisicing elit. Aperiam cumque deserunt omnis sed autem molestias et reprehenderit voluptatum odit voluptas fugiat reiciendis, corrupti nihil maiores. Pariatur laboriosam doloribus aspernatur. Accusamus! &lt;/div&gt; &lt;/div&gt; &lt;aside class=&quot;dark&quot;&gt; &lt;div class=&quot;panel&quot;&gt; &lt;h2&gt;Single-origin&lt;/h2&gt; &lt;div class=&quot;body&quot;&gt; Lorem ipsum dolor sit amet consectetur adipisicing elit. Aspernatur sunt perspiciatis fugit. Fuga nostrum ea error, autem officiis dolores tenetur necessitatibus doloribus mollitia qui veritatis cumque, saepe impedit inventore ab? &lt;/div&gt; &lt;/div&gt; &lt;/aside&gt; &lt;/div&gt;&lt;/body&gt; CSS部分： 123456789101112131415161718192021222324252627282930313233:root &#123; --main-bg: #fff; --main-color: #000;&#125;#test &#123; --main-bg: #365; --main-color: #000;&#125;.panel &#123; font-size: 1rem; padding: 1em; border: 1px solid #999; border-radius: .5em; background-color: var(--main-bg); color: var(--main-color);&#125;.panel &gt; h2 &#123; margin-top: 0; font-size: .8em; font-weight: bold; text-transform: uppercase;&#125;.dark &#123; margin-top: 2em; padding: 1em; background-color: #999; --main-bg: #333; --main-color: #fff;&#125; 总结选择器优先级和继承，最终出现的效果可能都会导致原来的样式被覆盖，但两者是不同的概念，目的不同，手段不同。 选择器优先级本质上是用来解决声明冲突的规则。因此在考虑选择器优先级的时候，首先看这两个选择器是否都（至少）作用于同一个元素，因为只有作用于同一个元素才有可能发生声明冲突，如果作用于同一个元素，那么就根据优先级规则预测元素的效果；继承本质上是添加样式的一种方式，与选择器的优先级和声明块的顺序没有直接关系。如果一个元素的某个属性（可继承的属性）没有层叠值，则会继承父元素的值，将属性加到body上会在整个网页上生效，而将属性加到特定元素上，则只会被它的后代元素继承，并且继承属性会顺序传递给后代元素，直到它被层叠值覆盖。","categories":[{"name":"Front-end","slug":"Front-end","permalink":"http://example.com/categories/Front-end/"}],"tags":[{"name":"CSS","slug":"CSS","permalink":"http://example.com/tags/CSS/"}]},{"title":"Objects","slug":"js-book1-note2","date":"2021-07-07T03:54:08.000Z","updated":"2021-07-07T03:56:25.307Z","comments":true,"path":"2021/07/07/js-book1-note2/","link":"","permalink":"http://example.com/2021/07/07/js-book1-note2/","excerpt":"","text":"","categories":[{"name":"Front-end","slug":"Front-end","permalink":"http://example.com/categories/Front-end/"}],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://example.com/tags/JavaScript/"}]},{"title":"Operator","slug":"js-book1-note1","date":"2021-07-06T16:00:00.000Z","updated":"2021-07-07T02:00:39.051Z","comments":true,"path":"2021/07/07/js-book1-note1/","link":"","permalink":"http://example.com/2021/07/07/js-book1-note1/","excerpt":"","text":"Boolean123456console.log(!false); //trueconsole.log(!&quot;blue&quot;); //falseconsole.log(!0); //trueconsole.log(!NaN); //trueconsole.log(!&quot;&quot;); //trueconsole.log(!12345); //false","categories":[{"name":"Front-end","slug":"Front-end","permalink":"http://example.com/categories/Front-end/"}],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://example.com/tags/JavaScript/"}]},{"title":"Hello World","slug":"hello-world","date":"2021-03-31T06:25:08.944Z","updated":"2021-06-01T08:21:27.260Z","comments":true,"path":"2021/03/31/hello-world/","link":"","permalink":"http://example.com/2021/03/31/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment 1const a = 0; 123456789101112.outer &#123; position: relative;&#125;.inner &#123; width: 200px; height: 200px; border-radius: 50%; position: absolute; top: calc(50% - 100px); left: calc(50% - 100px);&#125; wd 1dsdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd","categories":[{"name":"111","slug":"111","permalink":"http://example.com/categories/111/"}],"tags":[{"name":"test","slug":"test","permalink":"http://example.com/tags/test/"}]},{"title":"Template","slug":"template","date":"1899-12-31T15:55:00.000Z","updated":"2022-02-22T05:46:29.383Z","comments":true,"path":"1900/01/01/template/","link":"","permalink":"http://example.com/1900/01/01/template/","excerpt":"","text":"Template","categories":[{"name":"Template","slug":"Template","permalink":"http://example.com/categories/Template/"}],"tags":[{"name":"template","slug":"template","permalink":"http://example.com/tags/template/"}]}],"categories":[{"name":"Front-end","slug":"Front-end","permalink":"http://example.com/categories/Front-end/"},{"name":"111","slug":"111","permalink":"http://example.com/categories/111/"},{"name":"Template","slug":"Template","permalink":"http://example.com/categories/Template/"}],"tags":[{"name":"CSS","slug":"CSS","permalink":"http://example.com/tags/CSS/"},{"name":"JavaScript","slug":"JavaScript","permalink":"http://example.com/tags/JavaScript/"},{"name":"test","slug":"test","permalink":"http://example.com/tags/test/"},{"name":"template","slug":"template","permalink":"http://example.com/tags/template/"}]}