{"meta":{"title":"Xin's Blog","subtitle":"","description":"","author":"Xin","url":"http://example.com","root":"/"},"pages":[{"title":"about","date":"2021-03-31T14:12:35.000Z","updated":"2022-02-22T12:26:03.978Z","comments":true,"path":"about/index.html","permalink":"http://example.com/about/index.html","excerpt":"","text":"Hi there! I’m glad you found me. So this blog basically records the problems with solutions (if there’s any) I encountered while coding or making projects, and I may also beef up my blog by adding more tech notes in the future. Some facts about me: Studying Computer Science in college (I’m graduating soon); Passionate about front-end development; Struggling with my procrastination; Trying to improve my English language skills. Thanks for reading! :-) Last updated: Feb 22, 2022"},{"title":"tags","date":"2021-04-03T14:13:08.000Z","updated":"2021-04-03T14:15:10.244Z","comments":true,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""},{"title":"categories","date":"2021-04-03T14:13:47.000Z","updated":"2021-04-04T15:15:58.690Z","comments":true,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"20211222 - React Router doesn’t work after deploying on Heroku","slug":"20211222 - React Router doesn’t work after deploying on Heroku","date":"2021-12-21T16:00:00.000Z","updated":"2022-02-24T08:33:49.440Z","comments":true,"path":"2021/12/22/20211222 - React Router doesn’t work after deploying on Heroku/","link":"","permalink":"http://example.com/2021/12/22/20211222%20-%20React%20Router%20doesn%E2%80%99t%20work%20after%20deploying%20on%20Heroku/","excerpt":"","text":"相关链接React Routing works in local machine but not Heroku How to use react route on heroku? Tutorial: how to deploy a production React app to Heroku React Routing works in locally but not Heroku static.json not working for ReactJS routes and Heroku React Router Routes Don’t work when deployed to Heroku react-router vs react-router-dom, when to use one or the other? How to properly use useHistory () from react-router-dom? What is withRouter for in react-router-dom? React router doesn’t seen to work on production with heroku After heroku deployment, it looks like can’t find my react app files: GET / 404 An explanation of why router doesn’t work after deployed on Heroku React router urls not working in heroku? soggypizza1’s comment from discussion “React router urls not working in heroku?” Using ‘history’ to navigate your React app from outside a component 终于！！！！BrowserRouter换成HashRouter可以了！！！但是HashRouter似乎适合没有backend的application React Router working locally but not deployed on heroku React-router urls don’t work when refreshing or writing manually","categories":[{"name":"Front-end","slug":"Front-end","permalink":"http://example.com/categories/Front-end/"}],"tags":[{"name":"Half-solved","slug":"Half-solved","permalink":"http://example.com/tags/Half-solved/"},{"name":"Heroku","slug":"Heroku","permalink":"http://example.com/tags/Heroku/"},{"name":"React router","slug":"React-router","permalink":"http://example.com/tags/React-router/"}]},{"title":"20211216 - e.target.file[0]","slug":"20211216 - e.target.file[0]","date":"2021-12-15T16:00:00.000Z","updated":"2022-02-24T08:27:09.107Z","comments":true,"path":"2021/12/16/20211216 - e.target.file[0]/","link":"","permalink":"http://example.com/2021/12/16/20211216%20-%20e.target.file[0]/","excerpt":"","text":"e.target.file → filelist: e.target.file[0]:","categories":[{"name":"Front-end","slug":"Front-end","permalink":"http://example.com/categories/Front-end/"}],"tags":[{"name":"Solved","slug":"Solved","permalink":"http://example.com/tags/Solved/"},{"name":"DOM","slug":"DOM","permalink":"http://example.com/tags/DOM/"}]},{"title":"20211215 - 'Tag嵌套：`p` 不能在 `div` 里面，`div` 也不能在 `p` 里面'","slug":"20211215 - Tag嵌套：`p` 不能在 `div` 里面，`div` 也不能在 `p` 里面","date":"2021-12-14T16:00:00.000Z","updated":"2022-02-24T08:36:22.391Z","comments":true,"path":"2021/12/15/20211215 - Tag嵌套：`p` 不能在 `div` 里面，`div` 也不能在 `p` 里面/","link":"","permalink":"http://example.com/2021/12/15/20211215%20-%20Tag%E5%B5%8C%E5%A5%97%EF%BC%9A%60p%60%20%E4%B8%8D%E8%83%BD%E5%9C%A8%20%60div%60%20%E9%87%8C%E9%9D%A2%EF%BC%8C%60div%60%20%E4%B9%9F%E4%B8%8D%E8%83%BD%E5%9C%A8%20%60p%60%20%E9%87%8C%E9%9D%A2/","excerpt":"","text":"因为desc中的内容被解析为html之后，有些会出现&lt;p&gt;标签 Solution (temporary)123&lt;Typography variant=&#x27;body2&#x27; component=&#x27;h6&#x27;&gt; &#123;ReactHtmlParser(selectedPod.description)&#125;&lt;/Typography&gt; 实际dom中为h6，变体为p Typography默认的component是div。 p 标签里面不能嵌套 div 标签 - 掘金","categories":[{"name":"Front-end","slug":"Front-end","permalink":"http://example.com/categories/Front-end/"}],"tags":[{"name":"Half-solved","slug":"Half-solved","permalink":"http://example.com/tags/Half-solved/"},{"name":"CSS","slug":"CSS","permalink":"http://example.com/tags/CSS/"},{"name":"Material UI","slug":"Material-UI","permalink":"http://example.com/tags/Material-UI/"}]},{"title":"20211115 - A component is changing an uncontrolled Autocomplete to be controlled","slug":"20211115 - A component is changing an uncontrolled Autocomplete to be controlled","date":"2021-11-14T16:00:00.000Z","updated":"2022-02-24T07:58:10.138Z","comments":true,"path":"2021/11/15/20211115 - A component is changing an uncontrolled Autocomplete to be controlled/","link":"","permalink":"http://example.com/2021/11/15/20211115%20-%20A%20component%20is%20changing%20an%20uncontrolled%20Autocomplete%20to%20be%20controlled/","excerpt":"","text":"autocomplete 有两个独立的值，value 和 inputValue，各自都需要state来更新 而且注意这里 autocomplete 的value的一个object，所以value的state初始值也应该是一个object。否则inputValue 会变成 undefined 12345678910111213141516171819202122232425262728293031import React from &#x27;react&#x27;import TextField from &#x27;@material-ui/core/TextField&#x27;import Autocomplete from &#x27;@material-ui/lab/Autocomplete&#x27;const options = [&#x27;Option 1&#x27;, &#x27;Option 2&#x27;]export default function AutocompleteLab() &#123; const [value, setValue] = React.**useState(options[0])** const [inputValue, setInputValue] = React.useState(&#x27;&#x27;) return ( &lt;div&gt; &lt;div&gt;&#123;`value: $&#123;value !== null ? `&#x27;$&#123;value&#125;&#x27;` : &#x27;null&#x27;&#125;`&#125;&lt;/div&gt; &lt;div&gt;&#123;`inputValue: &#x27;$&#123;inputValue&#125;&#x27;`&#125;&lt;/div&gt; &lt;br /&gt; &lt;Autocomplete value=&#123;value&#125; onChange=&#123;(_, newValue) =&gt; &#123; setValue(newValue) &#125;&#125; inputValue=&#123;inputValue&#125; onInputChange=&#123;(_, newInputValue) =&gt; &#123; setInputValue(newInputValue) &#125;&#125; options=&#123;options&#125; style=&#123;&#123; width: 300 &#125;&#125; renderInput=&#123;(params) =&gt; &lt;TextField &#123;...params&#125; label=&quot;Name&quot; variant=&quot;outlined&quot; /&gt;&#125; /&gt; &lt;/div&gt; )&#125; A component is changing an uncontrolled Autocomplete to be controlled","categories":[{"name":"Front-end","slug":"Front-end","permalink":"http://example.com/categories/Front-end/"}],"tags":[{"name":"Solved","slug":"Solved","permalink":"http://example.com/tags/Solved/"},{"name":"Material UI","slug":"Material-UI","permalink":"http://example.com/tags/Material-UI/"}]},{"title":"20211115 - 修改水平方向的滚动条样式","slug":"20211115 - 修改水平方向的滚动条样式","date":"2021-11-14T16:00:00.000Z","updated":"2022-02-24T07:55:25.372Z","comments":true,"path":"2021/11/15/20211115 - 修改水平方向的滚动条样式/","link":"","permalink":"http://example.com/2021/11/15/20211115%20-%20%E4%BF%AE%E6%94%B9%E6%B0%B4%E5%B9%B3%E6%96%B9%E5%90%91%E7%9A%84%E6%BB%9A%E5%8A%A8%E6%9D%A1%E6%A0%B7%E5%BC%8F/","excerpt":"","text":"修改 height 的值就是修改水平滚动条的高度 How can I style horizontal scrollbar by CSS?","categories":[{"name":"Front-end","slug":"Front-end","permalink":"http://example.com/categories/Front-end/"}],"tags":[{"name":"Solved","slug":"Solved","permalink":"http://example.com/tags/Solved/"},{"name":"CSS","slug":"CSS","permalink":"http://example.com/tags/CSS/"}]},{"title":"20211102 - OpenSSL SSL_connect Connection was reset in connection to github.com 443","slug":"20211102 - OpenSSL SSL_connect Connection was reset in connection to github com443","date":"2021-11-01T16:00:00.000Z","updated":"2022-02-22T11:55:33.629Z","comments":true,"path":"2021/11/02/20211102 - OpenSSL SSL_connect Connection was reset in connection to github com443/","link":"","permalink":"http://example.com/2021/11/02/20211102%20-%20OpenSSL%20SSL_connect%20Connection%20was%20reset%20in%20connection%20to%20github%20com443/","excerpt":"","text":"代理相关 【已解决】OpenSSL SSL_connect: Connection was reset in connection to github.com:443_雷恩Layne-CSDN博客","categories":[{"name":"Front-end","slug":"Front-end","permalink":"http://example.com/categories/Front-end/"}],"tags":[{"name":"Solved","slug":"Solved","permalink":"http://example.com/tags/Solved/"},{"name":"Git","slug":"Git","permalink":"http://example.com/tags/Git/"}]},{"title":"20211102 - OpenSSL SSL_read Connection was reset, errno 10054","slug":"20211102 - OpenSSL SSL_read Connection was reset errno 10054","date":"2021-11-01T16:00:00.000Z","updated":"2022-02-22T11:55:39.741Z","comments":true,"path":"2021/11/02/20211102 - OpenSSL SSL_read Connection was reset errno 10054/","link":"","permalink":"http://example.com/2021/11/02/20211102%20-%20OpenSSL%20SSL_read%20Connection%20was%20reset%20errno%2010054/","excerpt":"","text":"遇到的情况是username, email出错 1git config --global http.sslVerify &quot;false&quot; Git 错误：OpenSSL SSL_read: Connection was reset, errno 10054 Git报错解决：OpenSSL SSL_read: Connection was reset, errno 10054_Erya Programming learning-CSDN博客","categories":[{"name":"Front-end","slug":"Front-end","permalink":"http://example.com/categories/Front-end/"}],"tags":[{"name":"Solved","slug":"Solved","permalink":"http://example.com/tags/Solved/"},{"name":"Git","slug":"Git","permalink":"http://example.com/tags/Git/"}]},{"title":"20211102 - error src refspec main does not match any error failed to push some refs to 'https://github.com/xxx/xxx.git'","slug":"20211102 - error src refspec main does not match any error failed to push some refs to 'httpsgithub.comxxxxxx.git'","date":"2021-11-01T16:00:00.000Z","updated":"2022-02-22T11:56:02.536Z","comments":true,"path":"2021/11/02/20211102 - error src refspec main does not match any error failed to push some refs to 'httpsgithub.comxxxxxx.git'/","link":"","permalink":"http://example.com/2021/11/02/20211102%20-%20error%20src%20refspec%20main%20does%20not%20match%20any%20error%20failed%20to%20push%20some%20refs%20to%20'httpsgithub.comxxxxxx.git'/","excerpt":"","text":"main master等等问题 git push error: src refspec main does not match any on linux","categories":[{"name":"Front-end","slug":"Front-end","permalink":"http://example.com/categories/Front-end/"}],"tags":[{"name":"Solved","slug":"Solved","permalink":"http://example.com/tags/Solved/"},{"name":"Git","slug":"Git","permalink":"http://example.com/tags/Git/"}]},{"title":"20211102 - fatal refusing to merge unrelated histories","slug":"20211102 - fatal refusing to merge unrelated histories","date":"2021-11-01T16:00:00.000Z","updated":"2022-02-22T11:54:15.394Z","comments":true,"path":"2021/11/02/20211102 - fatal refusing to merge unrelated histories/","link":"","permalink":"http://example.com/2021/11/02/20211102%20-%20fatal%20refusing%20to%20merge%20unrelated%20histories/","excerpt":"","text":"在创建了远程仓库并初始化了README.md、README.en.md文件，本地推送或拉取时出现以下错误： fatal: refusing to merge unrelated histories。 致命的:拒绝合并不相关的历史。 字面意思可见是历史原因不和造成的。 原因是远程库和本地库两个分支是两个不同的版本，具有不同的提交历史，所以存在矛盾。 解决办法：把两段不相干的 分支进行强行合并。 1$ git pull origin master --allow-unrelated-histories git fatal: refusing to merge unrelated histories错误（git本地库与远程库历史不相关） 情况远程仓库初始化README.md，自动生成默认分支main 本地仓库master分支git push -u origin master命令，在远程仓库中自动生成master分支，并把文件push进去 想要把远程仓库上的main和master合并，或者说是让文件都push到main分支上 解决本地仓库，git branch main，新建main分支 然后’git checkout main’，git pull origin master --allow-unrelated-histories，将远程仓库的master分支中的文件全部拉到本地新建的main分支 再git push origin main，把本地main推到远程main 最后git branch -d main，删除main 总结没有使用git merge，就是临时创建一个本地main，把远程master搬到远程main 参考git合并远程分支","categories":[{"name":"Front-end","slug":"Front-end","permalink":"http://example.com/categories/Front-end/"}],"tags":[{"name":"Solved","slug":"Solved","permalink":"http://example.com/tags/Solved/"},{"name":"Git","slug":"Git","permalink":"http://example.com/tags/Git/"}]},{"title":"20211102 - fatal unable to access 'https://github.com/xxx/xxxxx.git/' Empty reply from server","slug":"20211102 - fatal unable to access 'httpsgithub.comxxxxxxxx.git' Empty reply from server","date":"2021-11-01T16:00:00.000Z","updated":"2022-02-22T11:54:57.073Z","comments":true,"path":"2021/11/02/20211102 - fatal unable to access 'httpsgithub.comxxxxxxxx.git' Empty reply from server/","link":"","permalink":"http://example.com/2021/11/02/20211102%20-%20fatal%20unable%20to%20access%20'httpsgithub.comxxxxxxxx.git'%20Empty%20reply%20from%20server/","excerpt":"","text":"Emmm… They recommended restarting the computer… gits error on push Empty reply from server","categories":[{"name":"Front-end","slug":"Front-end","permalink":"http://example.com/categories/Front-end/"}],"tags":[{"name":"Solved","slug":"Solved","permalink":"http://example.com/tags/Solved/"},{"name":"Git","slug":"Git","permalink":"http://example.com/tags/Git/"}]},{"title":"20211102 - git Failed to connect to 127.0.0.1 port xxxx Connection refused","slug":"20211102 - git Failed to connect to 127 0 0 1 port xxxx Connection refused","date":"2021-11-01T16:00:00.000Z","updated":"2022-02-22T11:54:02.214Z","comments":true,"path":"2021/11/02/20211102 - git Failed to connect to 127 0 0 1 port xxxx Connection refused/","link":"","permalink":"http://example.com/2021/11/02/20211102%20-%20git%20Failed%20to%20connect%20to%20127%200%200%201%20port%20xxxx%20Connection%20refused/","excerpt":"","text":"git查看 123查询动态代理git config --global http.proxygit config --global https.proxy 若是有返回值 123取消代理git config --global --unset http.proxygit config --global --unset httpx.proxy 关于使用Git出现”git Failed to connect to 127.0.0.1 port xxxx: Connection refused”的问题解决方案_XH_jing的博客-CSDN博客 Failed to connect to 127.0.0.1 port 1080: Connection refused 解决","categories":[{"name":"Front-end","slug":"Front-end","permalink":"http://example.com/categories/Front-end/"}],"tags":[{"name":"Solved","slug":"Solved","permalink":"http://example.com/tags/Solved/"},{"name":"Git","slug":"Git","permalink":"http://example.com/tags/Git/"}]},{"title":"20211025 - git message","slug":"20211025 - git message","date":"2021-10-24T16:00:00.000Z","updated":"2022-02-22T11:36:27.491Z","comments":true,"path":"2021/10/25/20211025 - git message/","link":"","permalink":"http://example.com/2021/10/25/20211025%20-%20git%20message/","excerpt":"","text":"Situation: Solution: Reference:Please enter a commit message to explain why this merge is necessary, especially if it merges an updated upstream into a topic branch","categories":[{"name":"Front-end","slug":"Front-end","permalink":"http://example.com/categories/Front-end/"}],"tags":[{"name":"Solved","slug":"Solved","permalink":"http://example.com/tags/Solved/"},{"name":"Git","slug":"Git","permalink":"http://example.com/tags/Git/"}]},{"title":"20211014 - Promise 解决xml2js的返回值问题","slug":"20211014 - Promise 解决xml2js的返回值问题","date":"2021-10-13T16:00:00.000Z","updated":"2022-02-24T07:47:46.028Z","comments":true,"path":"2021/10/14/20211014 - Promise 解决xml2js的返回值问题/","link":"","permalink":"http://example.com/2021/10/14/20211014%20-%20Promise%20%E8%A7%A3%E5%86%B3xml2js%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC%E9%97%AE%E9%A2%98/","excerpt":"","text":"因为Podcast的description只能在feedUrl里找到，无法直接获取，而feedUrl是xml文件，所以获取之后要先转成json格式。parseString import自xml2js的built-in方法。 修改前：直接接收parseString的返回值 12345678910111213141516const desc = parseString(data, (err, result) =&gt; &#123; if (err) &#123; return &#125; // console.log(result) // const &#123; rss &#125; = result // const &#123; channel &#125; = rss // const &#123; description &#125; = channel[0] const &#123; description &#125; = result.rss.channel[0] // console.log(channel) console.log(description) // 正常值 return description &#125;) 输出的结果是一个正常值，但返回到json中却是一个又臭又长的对象。。。 修改后：创建一个Promise，Promise里面有一个函数（executor, which is called automatically），这个executor的参数resolve和reject是两个回调函数（由js本身提供） 123456789101112131415161718const desc = await new Promise((resolve, reject) =&gt; parseString(data, (err, result) =&gt; &#123; if (err) &#123; reject(null) &#125; else &#123; // console.log(result) // const &#123; rss &#125; = result // const &#123; channel &#125; = rss // const &#123; description &#125; = channel[0] const &#123; description &#125; = result.rss.channel[0] // console.log(channel) console.log(description) resolve(description) &#125; &#125;)).catch(error =&gt; &#123; console.log(error) &#125;) // 记得处理reject的情况！！！否则会报错！暂时的结论：await只有当resolved后才会返回given的result，如果是rejected的情况，会抛出错误，需要catch处理。 成功！ 重点：When the executor obtains the result, be it soon or late, doesn’t matter, it should call one of these callbacks: resolve(value) — if the job is finished successfully, with result value. reject(error) — if an error has occurred, error is the error object. The promise object returned by the new Promise constructor has these internal properties: state — initially &quot;pending&quot;, then changes to either &quot;fulfilled&quot; when resolve is called or &quot;rejected&quot; when reject is called. result — initially undefined, then changes to value when resolve(value) called or error when reject(error) is called. 💡 There can be only a single result or an error The properties state and result of the Promise object are internal. We can’t directly access them. We can use the methods .then/.catch/.finally for that. await will wait for a Promise value to resolve, otherwise it’ll just wrap the value it is given in a promise and resolve the promise right away. 参考： How to get xml2js results out of the parser in ES6? Promise - JavaScript | MDN await - JavaScript | MDN Promise","categories":[{"name":"Front-end","slug":"Front-end","permalink":"http://example.com/categories/Front-end/"}],"tags":[{"name":"Solved","slug":"Solved","permalink":"http://example.com/tags/Solved/"},{"name":"JavaScript","slug":"JavaScript","permalink":"http://example.com/tags/JavaScript/"},{"name":"Node.js","slug":"Node-js","permalink":"http://example.com/tags/Node-js/"},{"name":"Promise","slug":"Promise","permalink":"http://example.com/tags/Promise/"},{"name":"await/async","slug":"await-async","permalink":"http://example.com/tags/await-async/"}]},{"title":"20211014 - encodeURI() 解决中文等字符报错的问题","slug":"20211014 - encodeURI() 解决中文等字符报错的问题","date":"2021-10-13T16:00:00.000Z","updated":"2022-02-24T07:51:53.861Z","comments":true,"path":"2021/10/14/20211014 - encodeURI() 解决中文等字符报错的问题/","link":"","permalink":"http://example.com/2021/10/14/20211014%20-%20encodeURI()%20%E8%A7%A3%E5%86%B3%E4%B8%AD%E6%96%87%E7%AD%89%E5%AD%97%E7%AC%A6%E6%8A%A5%E9%94%99%E7%9A%84%E9%97%AE%E9%A2%98/","excerpt":"","text":"1const item = encodeURI(request.params.item) 注意：要在server端，也就是在node.js里对搜索关键词加encodeURI()！在前端写无效哈哈，因为后端才是the one that 直接向API发送get请求的。 参考： TypeError: Request path contains unescaped characters, how can I fix this nodejs请求Request path contains unescaped characters 错误解决： Request path contains unescaped characters_coderbin的博客-CSDN博客","categories":[{"name":"Front-end","slug":"Front-end","permalink":"http://example.com/categories/Front-end/"}],"tags":[{"name":"Solved","slug":"Solved","permalink":"http://example.com/tags/Solved/"},{"name":"Node.js","slug":"Node-js","permalink":"http://example.com/tags/Node-js/"},{"name":"Ajax","slug":"Ajax","permalink":"http://example.com/tags/Ajax/"}]},{"title":"20211013 - 'index.js1 Warning validateDOMNesting(...) figure cannot appear as a descendant of p.'","slug":"20211013 - 'index.js1 Warning validateDOMNesting(...) figure cannot appear as a descendant of p.'","date":"2021-10-12T16:00:00.000Z","updated":"2022-02-24T07:40:21.257Z","comments":true,"path":"2021/10/13/20211013 - 'index.js1 Warning validateDOMNesting(...) figure cannot appear as a descendant of p.'/","link":"","permalink":"http://example.com/2021/10/13/20211013%20-%20'index.js1%20Warning%20validateDOMNesting(...)%20figure%20cannot%20appear%20as%20a%20descendant%20of%20p.'/","excerpt":"","text":"Material UI的Typography的variant默认body1，也就是component为，而只能包含行内元素。所以将component的值改为div就可以了。 Solution:cannot appear as a descendant of Cool explanations: Reference：Why doesn’t my div inside a span work properly?","categories":[{"name":"Front-end","slug":"Front-end","permalink":"http://example.com/categories/Front-end/"}],"tags":[{"name":"Solved","slug":"Solved","permalink":"http://example.com/tags/Solved/"},{"name":"CSS","slug":"CSS","permalink":"http://example.com/tags/CSS/"},{"name":"Material UI","slug":"Material-UI","permalink":"http://example.com/tags/Material-UI/"}]},{"title":"20211013 - about exact in react-router","slug":"20211013 - about exact in react-router","date":"2021-10-12T16:00:00.000Z","updated":"2022-02-24T07:40:14.754Z","comments":true,"path":"2021/10/13/20211013 - about exact in react-router/","link":"","permalink":"http://example.com/2021/10/13/20211013%20-%20about%20exact%20in%20react-router/","excerpt":"","text":"123&lt;Route exact path=&quot;/&quot; component=&#123;Home&#125; /&gt; // explanation: / -&gt; Home; /blahblah -&gt; blank&lt;Route exact path=&quot;/:id&quot; component=&#123;Pod&#125; /&gt; // explanation: /:id -&gt; Pod; /:id/blahblah -&gt; blank&lt;Route path=&quot;/&quot; component=&#123;Home&#125; /&gt; // explanation: / -&gt; Home; /blahblah -&gt; Home exact的意思是精确匹配路径 加上exact之后，表明只匹配到path里的内容为止，如果不加exact，往path后面加上内容也会匹配到相同的组件。","categories":[{"name":"Front-end","slug":"Front-end","permalink":"http://example.com/categories/Front-end/"}],"tags":[{"name":"Solved","slug":"Solved","permalink":"http://example.com/tags/Solved/"},{"name":"React router","slug":"React-router","permalink":"http://example.com/tags/React-router/"}]},{"title":"20211009 - can't get the value of e.target.id","slug":"20211009 - can't get the value of e.target.id","date":"2021-10-08T16:00:00.000Z","updated":"2022-02-24T07:39:52.724Z","comments":true,"path":"2021/10/09/20211009 - can't get the value of e.target.id/","link":"","permalink":"http://example.com/2021/10/09/20211009%20-%20can't%20get%20the%20value%20of%20e.target.id/","excerpt":"","text":"e.target.id取值不稳定，时有时无 e.target &amp; e.currentTaget target is the element that triggered the event (e.g., the user clicked on)currentTarget is the element that the event listener is attached to. Difference between e.target and e.currentTarget","categories":[{"name":"Front-end","slug":"Front-end","permalink":"http://example.com/categories/Front-end/"}],"tags":[{"name":"Solved","slug":"Solved","permalink":"http://example.com/tags/Solved/"},{"name":"DOM","slug":"DOM","permalink":"http://example.com/tags/DOM/"}]},{"title":"20211009 - onClick() event传参","slug":"20211009 - onClick() event传参","date":"2021-10-08T16:00:00.000Z","updated":"2022-02-24T07:40:05.638Z","comments":true,"path":"2021/10/09/20211009 - onClick() event传参/","link":"","permalink":"http://example.com/2021/10/09/20211009%20-%20onClick()%20event%E4%BC%A0%E5%8F%82/","excerpt":"","text":"This helped!!! TypeError: Cannot read property ‘target’ of undefined","categories":[{"name":"Front-end","slug":"Front-end","permalink":"http://example.com/categories/Front-end/"}],"tags":[{"name":"React","slug":"React","permalink":"http://example.com/tags/React/"},{"name":"Solved","slug":"Solved","permalink":"http://example.com/tags/Solved/"},{"name":"JavaScript","slug":"JavaScript","permalink":"http://example.com/tags/JavaScript/"},{"name":"Arrow function","slug":"Arrow-function","permalink":"http://example.com/tags/Arrow-function/"},{"name":"Closure","slug":"Closure","permalink":"http://example.com/tags/Closure/"}]},{"title":"20211009 - multiple onClick() events","slug":"20211009 - multiple onClick() events","date":"2021-10-08T16:00:00.000Z","updated":"2022-02-24T07:39:58.925Z","comments":true,"path":"2021/10/09/20211009 - multiple onClick() events/","link":"","permalink":"http://example.com/2021/10/09/20211009%20-%20multiple%20onClick()%20events/","excerpt":"","text":"This helped!!! Call multiple functions onClick ReactJS","categories":[{"name":"Front-end","slug":"Front-end","permalink":"http://example.com/categories/Front-end/"}],"tags":[{"name":"React","slug":"React","permalink":"http://example.com/tags/React/"},{"name":"Solved","slug":"Solved","permalink":"http://example.com/tags/Solved/"},{"name":"JavaScript","slug":"JavaScript","permalink":"http://example.com/tags/JavaScript/"}]},{"title":"20210917 - findByIdAndUpdate does not run validations","slug":"20210917 - findByIdAndUpdate does not run validations","date":"2021-09-16T16:00:00.000Z","updated":"2022-02-22T11:16:57.322Z","comments":true,"path":"2021/09/17/20210917 - findByIdAndUpdate does not run validations/","link":"","permalink":"http://example.com/2021/09/17/20210917%20-%20findByIdAndUpdate%20does%20not%20run%20validations/","excerpt":"","text":"在创建Schema时应用了Validations，设置了required、minlength、unique等等限制。 123456789101112131415const personSchema = new mongoose.Schema(&#123; name: &#123; type: String, required: [true, &#x27;The name is required&#x27;], unique: true, minlength: [3, &#x27;The name has to be at least three characters long&#x27;] &#125;, number: &#123; type: String, required: [true, &#x27;The phone number is required&#x27;], minlength: [8, &#x27;The phone number must have at least 8 digits&#x27;] &#125;&#125;)personSchema.plugin(uniqueValidator) 在POST请求也就是创建新联系人的时候的确有用（大概是用了save()的缘故？）。 1234567891011121314151617181920app.post(&#x27;/api/persons&#x27;, (req, res, next) =&gt; &#123; const body = req.body console.log(body) const person = new Person(&#123; name: body.name, number: body.number, &#125;) console.log(person) person.**save()** .then(savedPerson =&gt; &#123; console.log(savedPerson) return savedPerson.toJSON() &#125;) .then(savedAndFormattedPerson =&gt; &#123; res.json(savedAndFormattedPerson) &#125;) .catch(error =&gt; next(error))&#125;) 但如果要修改（PUT请求）联系人信息，Validations就无法生效了。 1234567891011121314151617app.put(&#x27;/api/persons/:id&#x27;, (req, res, next) =&gt; &#123; const body = req.body const person = &#123; name: body.name, number: body.number, &#125; Person.findByIdAndUpdate(req.params.id, person, &#123;new: true&#125;) .then(updatedPerson =&gt; &#123; if (updatedPerson) &#123; res.json(updatedPerson) &#125; else &#123; res.status(404).end() &#125; &#125;) .catch(error =&gt; next(error))&#125;) 查了Mongoose文档： runValidators: if true, runs update validators on this command. Update validators validate the update operation against the model’s schema. Mongoose v6.0.6: 以及相关问答： Mongoose findByIdAndUpdate not running validations on subdocuments According to the documentation, validators seems to work only for update() and findOneAndUpdate() if runValidators is set to true. 但其实文档里也说过findByAndUpdate也可以支持有限的validation的。。。（可能这个回答时间比较久远了，现在好像是可行的） 见下： Note:findOneAndX and findByIdAndX functions support limited validation that you can enable by setting the runValidators option. If you need full-fledged validation, use the traditional approach of first retrieving the document. 123const doc = await Model.findById(id);doc.name = &#x27;jason bourne&#x27;;await doc.save(); 按照文档试了一下好像确实可以 修改后的PUT代码部分 1234567891011121314151617app.put(&#x27;/api/persons/:id&#x27;, (req, res, next) =&gt; &#123; const body = req.body const person = &#123; name: body.name, number: body.number, &#125; Person.findByIdAndUpdate(req.params.id, person, **&#123;new: true, runValidators: true&#125;**) .then(updatedPerson =&gt; &#123; if (updatedPerson) &#123; res.json(updatedPerson) &#125; else &#123; res.status(404).end() &#125; &#125;) .catch(error =&gt; next(error))&#125;) 前端也作了修改，加了if-else判断error的类型后再输出报错的message，也不知道在异步方法下加判断会不会有坑，但功能上是实现了的。相关代码如下： 12345678910111213141516171819202122232425262728293031323334353637383940personService .update(samePerson.id, changedPerson) .then(returnedPerson =&gt; &#123; console.log(returnedPerson) setPersons(persons.map(person =&gt; person.id === samePerson.id ? returnedPerson : person)) setNewName(&#x27;&#x27;) setNewNumber(&#x27;&#x27;) setError(false) setMessage( `Updated $&#123;returnedPerson.name&#125;&#x27;s number` ) setTimeout(() =&gt; &#123; setMessage(null) &#125;, 5000) &#125;) .catch(error =&gt; &#123; console.log(error.response.data.error) **if (error.response.data.error) &#123; setMessage( `$&#123;error.response.data.error&#125;` ) setTimeout(() =&gt; &#123; setMessage(null) &#125;, 5000) setError(true) setNewName(&#x27;&#x27;) setNewNumber(&#x27;&#x27;) &#125; else &#123; setMessage( `Information of $&#123;samePerson.name&#125; has already been removed from server` ) setTimeout(() =&gt; &#123; setMessage(null) &#125;, 5000); setPersons(persons.filter(person =&gt; person.name !== newName)) setNewName(&#x27;&#x27;) setNewNumber(&#x27;&#x27;) setError(true) &#125;** &#125;) 降低冗余后： 1234567891011121314151617181920212223242526272829303132333435363738const samePerson = persons.find(person =&gt; person.name === newName) const changedPerson = &#123; ...samePerson, number: newNumber &#125; personService .update(samePerson.id, changedPerson) .then(returnedPerson =&gt; &#123; console.log(returnedPerson) setPersons(persons.map(person =&gt; person.id === samePerson.id ? returnedPerson : person)) setNewName(&#x27;&#x27;) setNewNumber(&#x27;&#x27;) setError(false) setMessage( `Updated $&#123;returnedPerson.name&#125;&#x27;s number` ) setTimeout(() =&gt; &#123; setMessage(null) &#125;, 5000) &#125;) .catch(error =&gt; &#123; // console.log(error.response.data.error) **if (error.response.data.error) &#123; setMessage( `$&#123;error.response.data.error&#125;` ) &#125; else &#123; setMessage( `Information of $&#123;samePerson.name&#125; has already been removed from server` ) setPersons(persons.filter(person =&gt; person.name !== newName)) &#125; setTimeout(() =&gt; &#123; setMessage(null) &#125;, 5000) setError(true) setNewName(&#x27;&#x27;) setNewNumber(&#x27;&#x27;)** &#125;)","categories":[{"name":"Front-end","slug":"Front-end","permalink":"http://example.com/categories/Front-end/"}],"tags":[{"name":"React","slug":"React","permalink":"http://example.com/tags/React/"},{"name":"Solved","slug":"Solved","permalink":"http://example.com/tags/Solved/"},{"name":"MongoDB","slug":"MongoDB","permalink":"http://example.com/tags/MongoDB/"},{"name":"Mongoose","slug":"Mongoose","permalink":"http://example.com/tags/Mongoose/"}]},{"title":"20210917 - Assign object to a variable before exporting as module default import/no-anonymous-default-export","slug":"20210917 - Assign object to a variable before exporting as module default importno-anonymous-default-export","date":"2021-09-16T16:00:00.000Z","updated":"2022-02-22T11:11:36.749Z","comments":true,"path":"2021/09/17/20210917 - Assign object to a variable before exporting as module default importno-anonymous-default-export/","link":"","permalink":"http://example.com/2021/09/17/20210917%20-%20Assign%20object%20to%20a%20variable%20before%20exporting%20as%20module%20default%20importno-anonymous-default-export/","excerpt":"","text":"react_devtools_backend.js:4049 src\\services\\persons.js Line 27:1: Assign object to a variable before exporting as module default import/no-anonymous-default-export 出现了这个warning。 修改前的代码： 1export default &#123; getAll, create, update, remove &#125; 修改后的代码： 12345678const personService = &#123; getAll, create, update, remove&#125;export default personService 参考： How can I get rid of the warning import/no-anonymous-default-export in React?","categories":[{"name":"Front-end","slug":"Front-end","permalink":"http://example.com/categories/Front-end/"}],"tags":[{"name":"Solved","slug":"Solved","permalink":"http://example.com/tags/Solved/"},{"name":"ES6","slug":"ES6","permalink":"http://example.com/tags/ES6/"}]},{"title":"20210916 - JSON","slug":"20210916 - JSON","date":"2021-09-15T16:00:00.000Z","updated":"2022-02-22T11:08:10.022Z","comments":true,"path":"2021/09/16/20210916 - JSON/","link":"","permalink":"http://example.com/2021/09/16/20210916%20-%20JSON/","excerpt":"","text":"后端发送的response是把updatedNote这个object转成JSON string 123456789101112131415app.put(&#x27;/api/notes/:id&#x27;, (request, response, next) =&gt; &#123; const body = request.body const note = &#123; content: body.content, important: body.important, &#125; Note.findByIdAndUpdate(request.params.id, note, &#123;new: true&#125;) .then(updatedNote =&gt; &#123; **// console.log(typeof updatedNote) // object** response.json(updatedNote) &#125;) .catch(error =&gt; next(error))&#125;) 前端接收到的整个response和response.data的类型都是object。 然而json的类型是string，为什么传回前端变成object了？还是说中间有更复杂的操作？","categories":[{"name":"Front-end","slug":"Front-end","permalink":"http://example.com/categories/Front-end/"}],"tags":[{"name":"JSON","slug":"JSON","permalink":"http://example.com/tags/JSON/"},{"name":"Ajax","slug":"Ajax","permalink":"http://example.com/tags/Ajax/"},{"name":"HTTP","slug":"HTTP","permalink":"http://example.com/tags/HTTP/"},{"name":"Unsolved","slug":"Unsolved","permalink":"http://example.com/tags/Unsolved/"}]},{"title":"20210916 - Cannot read property 'name' of null","slug":"20210916 - Cannot read property 'name' of null","date":"2021-09-15T16:00:00.000Z","updated":"2022-02-22T12:24:25.353Z","comments":true,"path":"2021/09/16/20210916 - Cannot read property 'name' of null/","link":"","permalink":"http://example.com/2021/09/16/20210916%20-%20Cannot%20read%20property%20'name'%20of%20null/","excerpt":"","text":"起因： 做phonebook的时候发现一个bug：后端新建一个联系人，前端刷新，更新最新的phonebook，并返回后端删除刚刚新建的联系人，前端修改这个联系人（实际上数据库中已经不存在）的信息，submit后报如下错误： 前端代码： 12345678910111213141516171819202122232425262728const samePerson = persons.find(person =&gt; person.name === newName)const changedPerson = &#123;...samePerson, number: newNumber&#125;personService .update(samePerson.id, changedPerson) .then(returnedPerson =&gt; &#123; **console.log(returnedPerson) // Debug** setPersons(persons.map(person =&gt; person.id === samePerson.id ? returnedPerson : person)) setNewName(&#x27;&#x27;) setNewNumber(&#x27;&#x27;) setError(false) setMessage( `Updated $&#123;returnedPerson.name&#125;&#x27;s number` ) setTimeout(() =&gt; &#123; setMessage(null) &#125;, 5000) &#125;) .catch(error =&gt; &#123; setMessage( `Information of $&#123;samePerson.name&#125; has already been removed from server` ) setTimeout(() =&gt; &#123; setMessage(null) &#125;, 5000); setPersons(persons.filter(person =&gt; person.name !== newName)) setError(true) &#125;) 修改前的后端代码： 1234567891011121314app.put(&#x27;/api/persons/:id&#x27;, (req, res, next) =&gt; &#123; const body = req.body const person = &#123; name: body.name, number: body.number, &#125; Person.findByIdAndUpdate(req.params.id, person, &#123;new: true&#125;) .then(updatedPerson =&gt; &#123; **console.log(updatedPerson) // Debug** res.json(updatedPerson) &#125;) .catch(error =&gt; next(error))&#125;) 先debug前端代码，发现接收到的put请求的返回值returnedPerson 为null，按理说这种情况promise应该rejected，进入catch，并且输出报错的message。 debug后端代码，发现更新数据后返回的updatedPerson 也为null，于是加了个判断，不为null就返回，为null就报错，返回给前端就是rejected，进入catch，并输出报错的message。 修改后的后端代码： 123456789101112131415161718app.put(&#x27;/api/persons/:id&#x27;, (req, res, next) =&gt; &#123; const body = req.body const person = &#123; name: body.name, number: body.number, &#125; Person.findByIdAndUpdate(req.params.id, person, &#123;new: true&#125;) .then(updatedPerson =&gt; &#123; console.log(updatedPerson) if (updatedPerson) &#123; res.json(updatedPerson) &#125; else &#123; res.status(404).end() &#125; &#125;) .catch(error =&gt; next(error))&#125;) React App可以正常运行 这个情况和之前在GET请求中用findByID() 获取单个document很相似，那个案例中也是对返回值作了判断，如果是id合法但未找到信息（被删除或者本来就不存在），就返回null（没测试过，但理论上应该是这样），而id不合法直接进入catch返回error。所以大概是mongoose的findXXX方法的特性？？ 20210915 - 两种情况两种状态码 另（这是我发现这个错误之前的前端代码）： 这段代码让我疑惑的点是，为什么在setNewName(&#39;&#39;)之后，setMessage()仍然可以获得newName的值？之前写的时候竟然没注意到。。。 （关于这个，听过一种说法是，多个setState的时候，可能会组团一起更新。。） 123456789101112131415161718192021222324252627personService .update(samePerson.id, changedPerson) .then(returnedPerson =&gt; &#123; console.log(returnedPerson) setPersons(persons.map(person =&gt; person.id === samePerson.id ? returnedPerson : person)) setNewName(&#x27;&#x27;) setNewNumber(&#x27;&#x27;) setError(false) setMessage( `Updated $&#123;**newName**&#125;&#x27;s number` ) setTimeout(() =&gt; &#123; setMessage(null) &#125;, 5000) &#125;) .catch(error =&gt; &#123; setNewName(&#x27;&#x27;) setNewNumber(&#x27;&#x27;) setMessage( `Information of $&#123;**newName**&#125; has already been removed from server` ) setTimeout(() =&gt; &#123; setMessage(null) &#125;, 5000); setPersons(persons.filter(person =&gt; person.name !== newName)) setError(true) &#125;) 贴一下相关的问答和参考： 为什么调用react setState方法不会立即改变状态？ React Lifecycle Methods diagram React.Component - React React setState not Updating Immediately","categories":[{"name":"Front-end","slug":"Front-end","permalink":"http://example.com/categories/Front-end/"}],"tags":[{"name":"React","slug":"React","permalink":"http://example.com/tags/React/"},{"name":"Half-solved","slug":"Half-solved","permalink":"http://example.com/tags/Half-solved/"}]},{"title":"20210916 - Manually set environment variables to Heroku","slug":"20210916 - Manually set environment variables to Heroku","date":"2021-09-15T16:00:00.000Z","updated":"2022-02-22T10:54:37.396Z","comments":true,"path":"2021/09/16/20210916 - Manually set environment variables to Heroku/","link":"","permalink":"http://example.com/2021/09/16/20210916%20-%20Manually%20set%20environment%20variables%20to%20Heroku/","excerpt":"","text":"Option 1:We defined the environment variables for development in file .env, but the environment variable that defines the database URL in production should be set to Heroku with the *heroku config:set* command. 1$ heroku config:set MONGODB_URI=mongodb+srv://fullstack:secretpasswordhere@cluster0-ostce.mongodb.net/note-app?retryWrites=true NB: if the command causes an error, give the value of MONGODB_URI in apostrophes: 1$ heroku config:set MONGODB_URI=&#x27;mongodb+srv://fullstack:secretpasswordhere@cluster0-ostce.mongodb.net/note-app?retryWrites=true&#x27; Option 2: (recommended!)Heroku App → Setting → Config Vars I’ve set MONGODB_URI via git bash but it didn’t work, so I tried one more time by manually setting it on Heroku. It worked!","categories":[{"name":"Front-end","slug":"Front-end","permalink":"http://example.com/categories/Front-end/"}],"tags":[{"name":"Solved","slug":"Solved","permalink":"http://example.com/tags/Solved/"},{"name":"MongoDB","slug":"MongoDB","permalink":"http://example.com/tags/MongoDB/"},{"name":"Heroku","slug":"Heroku","permalink":"http://example.com/tags/Heroku/"}]},{"title":"20210916 - unique validator","slug":"20210916 - unique validator","date":"2021-09-15T16:00:00.000Z","updated":"2022-02-22T10:54:29.540Z","comments":true,"path":"2021/09/16/20210916 - unique validator/","link":"","permalink":"http://example.com/2021/09/16/20210916%20-%20unique%20validator/","excerpt":"","text":"按照github上的instruction安装了mongoose-unique-validator，并配置了相应的属性。 12345678910111213const personSchema = new mongoose.Schema(&#123; name: &#123; type: String, required: true, unique: true &#125;, number: &#123; type: String, required: true &#125;&#125;)personSchema.plugin(uniqueValidator) 测试后，同名的联系人的确是无法添加到数据库了。 但是！在前中后面加空格还是可以的，并且每个地方显示空格的数量还不一样。。。 比如VSCode REST Client、服务端的Terminal和数据库，显示的就是输入的空格数（7个） 而网页render后完全没有体现出空格。 在JSON里，只有在最后多出了一个空格（在前面加多个空格，在JSON里面会在前面多出一个空格；在中间加多个空格，在JSON里中间也只会有一个空格）","categories":[{"name":"Front-end","slug":"Front-end","permalink":"http://example.com/categories/Front-end/"}],"tags":[{"name":"MongoDB","slug":"MongoDB","permalink":"http://example.com/tags/MongoDB/"},{"name":"Unsolved","slug":"Unsolved","permalink":"http://example.com/tags/Unsolved/"}]},{"title":"20210915 - 两种情况两种状态码","slug":"20210915 - 两种情况两种状态码","date":"2021-09-14T16:00:00.000Z","updated":"2022-02-22T10:54:45.275Z","comments":true,"path":"2021/09/15/20210915 - 两种情况两种状态码/","link":"","permalink":"http://example.com/2021/09/15/20210915%20-%20%E4%B8%A4%E7%A7%8D%E6%83%85%E5%86%B5%E4%B8%A4%E7%A7%8D%E7%8A%B6%E6%80%81%E7%A0%81/","excerpt":"","text":"1234567891011121314app.get(&#x27;/api/notes/:id&#x27;, (request, response) =&gt; &#123; Note.findById(request.params.id) .then(note =&gt; &#123; if (note) &#123; response.json(note) &#125; else &#123; **response.status(404).end()** &#125; &#125;) .catch(error =&gt; &#123; console.log(error) **response.status(400).send(&#123;error: &quot;malformed id&quot;&#125;)** &#125;)&#125;) 之所以分两种状态码，是因为有两种错误。。 下面这个应该是属于invalid id吧，猜测判断是否valid是根据id的长度来的，如果长度匹配就报404，长度不匹配报400 关于400状态码 The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.","categories":[{"name":"Front-end","slug":"Front-end","permalink":"http://example.com/categories/Front-end/"}],"tags":[{"name":"Solved","slug":"Solved","permalink":"http://example.com/tags/Solved/"},{"name":"Node.js","slug":"Node-js","permalink":"http://example.com/tags/Node-js/"},{"name":"Status code","slug":"Status-code","permalink":"http://example.com/tags/Status-code/"}]},{"title":"20210914 - Fail to access environment variables from .env file","slug":"20210914 - Fail to access environment variables from .env file","date":"2021-09-13T16:00:00.000Z","updated":"2022-02-22T10:54:52.490Z","comments":true,"path":"2021/09/14/20210914 - Fail to access environment variables from .env file/","link":"","permalink":"http://example.com/2021/09/14/20210914%20-%20Fail%20to%20access%20environment%20variables%20from%20.env%20file/","excerpt":"","text":"之前在一个React的Demo中用api获取天气信息的时候用到过环境变量，大概就是三个步骤，第一：把REACT_APP_API_KEY的value保存在.env文件里；第二：通过process.env.REACT_APP_API_KEY获取和使用value；第三：把.env加到.gitignore里，避免被push到git repository。 这次的目标是连接Node.js后端和MongoDB。MongoDB的URL中的password需要保存为环境变量，我就完全按照上次总结的步骤行事，但是报错了。直接在URL中写入password的值和console(password)后发现这个error应该是没有获取到环境变量导致的。 解决方法第一步：添加dotenv依赖 1234567npm install dotenv&quot;dependencies&quot;: &#123; &quot;cors&quot;: &quot;^2.8.5&quot;, **&quot;dotenv&quot;: &quot;^10.0.0&quot;,** &quot;express&quot;: &quot;^4.17.1&quot;, &quot;mongoose&quot;: &quot;^6.0.5&quot;&#125;, 关于dotenv Dotenv is a zero-dependency module that loads environment variables from a .env file into [process.env](&lt;https://nodejs.org/docs/latest/api/process.html#process_process_env&gt;). Storing configuration in the environment separate from code is based on The Twelve-Factor App methodology. 第二步：在index.js中引入 12const dotenv = require(&#x27;dotenv&#x27;)dotenv.config() 关于config config will read your .env file, parse the contents, assign it to process.env, and return an Object with a parsed key containing the loaded content or an error key if it failed. 然后就和数据库连接成功了！ 个人总结大概.env里的环境变量在Node.js这边不能直接获取和使用，需要先添加dotenv依赖后才可。 参考Connecting to MongoDB using Mongoose 🌳","categories":[{"name":"Front-end","slug":"Front-end","permalink":"http://example.com/categories/Front-end/"}],"tags":[{"name":"Solved","slug":"Solved","permalink":"http://example.com/tags/Solved/"},{"name":"Node.js","slug":"Node-js","permalink":"http://example.com/tags/Node-js/"},{"name":"Dotenv","slug":"Dotenv","permalink":"http://example.com/tags/Dotenv/"}]},{"title":"20210914 - `node xxx.js MY_PASSWORD` caused errors","slug":"20210914 - `node xxx.js MY_PASSWORD` caused errors","date":"2021-09-13T16:00:00.000Z","updated":"2022-02-23T06:30:41.586Z","comments":true,"path":"2021/09/14/20210914 - `node xxx.js MY_PASSWORD` caused errors/","link":"","permalink":"http://example.com/2021/09/14/20210914%20-%20%60node%20xxx.js%20MY_PASSWORD%60%20caused%20errors/","excerpt":"","text":"A review of connecting to mongodb … step 1: Create a new cluster step 2: Select service + region I tried to save data to mongodb. After double checking the password, the IP whitelist and that the connection string was correct, I still got these errors even if I succeeded in creating collections but unfortunately no data was saved to it. save section: 1234note.save().then(result =&gt; &#123; console.log(&#x27;note saved!&#x27;) mongoose.connection.close()&#125;) mongodb dashboard: Then I followed the steps on Telegram and add catch() to catch errors save section: 1234note.save().then(result =&gt; &#123; console.log(&#x27;note saved!&#x27;) mongoose.connection.close()&#125;).catch(err =&gt; console.log(err)) But still one error left and no data in mongodb dashboard: Eventually I found the solution that successfully saved the data to collection: Anyone else who get this warning when connecting to mongoDB cluster just change the driver version from 3.* to 2.* From connect &gt; connect your application &gt; version select 2.2.* or later So the url section turned to this: 1const url = `mongodb://fullstack:$&#123;password&#125;@cluster0-shard-00-00.xfjup.mongodb.net:27017,cluster0-shard-00-01.xfjup.mongodb.net:27017,cluster0-shard-00-02.xfjup.mongodb.net:27017/myFirstDatabase?ssl=true&amp;replicaSet=atlas-rob6kd-shard-0&amp;authSource=admin&amp;retryWrites=true&amp;w=majority` It worked! catch() is not a must for this case And I noticed the INDEXES TOTAL SIZE decreased to 4KB after I tried one more time. I’m not sure if it’s a bug because the collection still said the Index Size was 20KB. Alright, it turned out to be a bug…","categories":[{"name":"Front-end","slug":"Front-end","permalink":"http://example.com/categories/Front-end/"}],"tags":[{"name":"Solved","slug":"Solved","permalink":"http://example.com/tags/Solved/"},{"name":"Node.js","slug":"Node-js","permalink":"http://example.com/tags/Node-js/"},{"name":"MongoDB","slug":"MongoDB","permalink":"http://example.com/tags/MongoDB/"}]},{"title":"20210908 - Node (v14 above) isn't supported on win7","slug":"20210908 - Node (v14 above) isn't supported on win7","date":"2021-09-07T16:00:00.000Z","updated":"2022-02-22T10:55:08.445Z","comments":true,"path":"2021/09/08/20210908 - Node (v14 above) isn't supported on win7/","link":"","permalink":"http://example.com/2021/09/08/20210908%20-%20Node%20(v14%20above)%20isn't%20supported%20on%20win7/","excerpt":"","text":"Possible solution: Node.js 14.x supported on windows 8.1 and above? · Issue #33000 · nodejs/node NodeJS for windows 7 How to set the NODE_SKIP_PLATFORM_CHECK environment variable to 1 which skips the version check How to set the NODE_SKIP_PLATFORM_CHECK environment variable to 1 which skips the version check How to uninstall node.js completely Windows下完全卸载node.js并安装node.js的多版本管理工具nvm-windows_不积跬步，无以至千里-CSDN博客_windows卸载node Just a short conclusion:First let’s review how to upgrade node.jsstep 1: uninstall existing node.js and delete relevant files (such as C:\\Users{User}\\AppData\\Roaming\\npm &amp; C:\\Users{User}\\AppData\\Roaming\\npm-cache), then restart the machine step 2: download nvm-setup.zip from github step 3: extract the zip and follow the commands below 1nvm install SPECIFIC_VERSIOIN_YOU_WANT_TO_INSTALL 1nvm use THE_VERSION_YOU_JUST_INSTALLED You can also check the versions you’ve installed with the command nvm list and enter nvm list available to see the versions available to download. Technically done. However, here comes up a problem that unfortunately v14+ of node.js isn’t supported by windows 7. And you’ll get these words when use it: With the help of stackoverflow, I found the solution, here’s the original answer I pasted: Had same problem and ended solving it, I just installed node 14.15.0 Go here Download the Windows Binary (.zip) either 32/64 bit Extract it in the directory where your node it’s installed and say yes to replace all files (remember that the zip comes with npm that is in node_modules/npm directory I didn’t copy from the zip because I already updated npm before replacing the files) Create an Environment variable called: [NODE_SKIP_PLATFORM_CHECK](https://nodejs.org/api/cli.html#cli_node_skip_platform_check_value) and set it to 1 Ready to use node in Windows 7 for now Here’s another answer on how to set NODE_SKIP_PLATFORM_CHECK to 1, I had to paste it here too: This work for me Go to System-Properties (run: systempropertiesadvanced.exe), in Advanced tab, click Environment Variables. Still on the System variables, click ‘New’, add “NODE_PATH” with value “C:\\nodejs64\\node_modules”, and click OK. click ‘New’ again, add “NODE_SKIP_PLATFORM_CHECK” with value “1”, and click OK. Click OK of all dialogs close. Restart your machine, so explore and cmd will get the fresh set of variables. SO THANKS TO STACKOVERFLOW, FINALLY I INSTALLED THE LATEST VERSION OF NODE AND SUCCESSFULLY GET IT UP AND RUNNING ON WINDOWS 7! :-)","categories":[{"name":"Front-end","slug":"Front-end","permalink":"http://example.com/categories/Front-end/"}],"tags":[{"name":"Solved","slug":"Solved","permalink":"http://example.com/tags/Solved/"},{"name":"Node.js","slug":"Node-js","permalink":"http://example.com/tags/Node-js/"}]},{"title":"20210903 - Set Environment Variables & Deal with missing dependencies","slug":"20210903 - Set Environment Variables & Deal with missing dependencies","date":"2021-09-02T16:00:00.000Z","updated":"2022-02-22T12:17:31.599Z","comments":true,"path":"2021/09/03/20210903 - Set Environment Variables & Deal with missing dependencies/","link":"","permalink":"http://example.com/2021/09/03/20210903%20-%20Set%20Environment%20Variables%20&%20Deal%20with%20missing%20dependencies/","excerpt":"","text":"Well, I’ve just known how to set environment variables. Create a .env (just the name ‘.env’ is fine) file in the root of your project In the file, add this line: # env REACT_APP_API_KEY=[your_app_api_key] Add const api_key = process.env.REACT_APP_API_KEY to where you need the key Hide your key by adding ‘.env’ file into gitignore, so that file wont be pushed to github, once you do commit When every step was done, I did set the key and run the application successfully. But here’s another error I got. I can’t figure out what it means: react_devtools_backend.js:2850 src\\components\\Weather.js Line 22:6: React Hook useEffect has missing dependencies: ‘api_key’ and ‘profile.capital’. Either include them or remove the dependency array react-hooks/exhaustive-deps Actually I remember I got this error last time and solved it finally. But this time it’s weird, like, why it had to mention api_key here? And what’s this dependency array exactly??? Solutions from stackoverflow, but I haven’t tested yet. How to fix missing dependency warning when using useEffect React Hook","categories":[{"name":"Front-end","slug":"Front-end","permalink":"http://example.com/categories/Front-end/"}],"tags":[{"name":"React","slug":"React","permalink":"http://example.com/tags/React/"},{"name":"Half-solved","slug":"Half-solved","permalink":"http://example.com/tags/Half-solved/"}]},{"title":"20210902 - React Hook useEffect has a missing dependency 'countries'.","slug":"20210902 - React Hook useEffect has a missing dependency 'countries'","date":"2021-09-01T16:00:00.000Z","updated":"2022-02-22T11:19:39.691Z","comments":true,"path":"2021/09/02/20210902 - React Hook useEffect has a missing dependency 'countries'/","link":"","permalink":"http://example.com/2021/09/02/20210902%20-%20React%20Hook%20useEffect%20has%20a%20missing%20dependency%20'countries'/","excerpt":"","text":"webpackHotDevClient.js:138 src\\App.jsLine 18:6: React Hook useEffect has a missing dependency: ‘countries’. Either include it or remove the dependency array react-hooks/exhaustive-deps App.js 123456789101112131415161718192021222324252627282930313233343536373839404142434445import axios from &quot;axios&quot;;import React, &#123; useState, useEffect&#125; from &quot;react&quot;;const App = (&#123;countries&#125;) =&gt; &#123; const [countries, setCountries] = useState([]) const [search, setSearch] = useState(&#x27;&#x27;) useEffect(() =&gt; &#123; console.log(&#x27;effect&#x27;) axios .get(&#x27;https://restcountries.eu/rest/v2/all&#x27;) .then(response =&gt; &#123; console.log(&#x27;promise fulfilled&#x27;) console.log(response) setCountries(response.data) // countries.push(response.data) // wrong! you should use setCountries &#125;) &#125;, []) // If the second parameter is an empty array [], then the effect is only run along with the first render of the component. (It just renders the component only once like componentDidMount.) console.log(&#x27;render&#x27;, countries.length, &#x27;countries&#x27;) const handleSearchChange = (event) =&gt; &#123; setSearch(event.target.value) // console.log(search) &#125; const searchCountry = search ? countries.filter(country =&gt; country.name.toLowerCase().includes (search.toLowerCase()) ) : [] return ( &lt;div&gt; find countries: &lt;input value=&#123;search&#125; onChange=&#123;handleSearchChange&#125; /&gt; &#123;searchCountry.map(country =&gt; &lt;div key=&#123;country.name&#125;&gt;&#123;country.name&#125;&lt;/div&gt; )&#125; &lt;/div&gt; )&#125;export default App; index.js 12345678910import React from &#x27;react&#x27;;import ReactDOM from &#x27;react-dom&#x27;;import App from &#x27;./App&#x27;;const countries = []ReactDOM.render( &lt;App countries=&#123;countries&#125; /&gt;, document.getElementById(&#x27;root&#x27;)); Note:Don’t directly mutate a state in ReactI attempted to replace useState() with Array.push(). But it didn’t work and instead threw these two errors: For more details: Why can’t I directly modify a component’s state, really? useEffect()Because useEffect is run after the render of the component, where you can find this rule by the prints below: However, with useState(), it will re-render the component and its state countries will be updated to 250 elements and maintain what it have (re-renders caused by other states won’t affect its value due to the state is somewhat independent?), and because we add the second parameter [] of useEffect, now it is just run after the first render of the component. And here’s a good article introducing how useEffect and its parameters work. React.js - How to execute useEffect hook only once?","categories":[{"name":"Front-end","slug":"Front-end","permalink":"http://example.com/categories/Front-end/"}],"tags":[{"name":"React","slug":"React","permalink":"http://example.com/tags/React/"},{"name":"Solved","slug":"Solved","permalink":"http://example.com/tags/Solved/"}]},{"title":"20210831 - Array.includes() 无法用于判断对象元素","slug":"20210831 - Array.includes() 无法用于判断对象元素","date":"2021-08-30T16:00:00.000Z","updated":"2022-02-22T10:55:50.249Z","comments":true,"path":"2021/08/31/20210831 - Array.includes() 无法用于判断对象元素/","link":"","permalink":"http://example.com/2021/08/31/20210831%20-%20Array.includes()%20%E6%97%A0%E6%B3%95%E7%94%A8%E4%BA%8E%E5%88%A4%E6%96%AD%E5%AF%B9%E8%B1%A1%E5%85%83%E7%B4%A0/","excerpt":"","text":"一个React练习：编写通讯录 所有联系人的姓名和电话号码作为object放到一个数组里 在给联系人去重的时候，发现includes无法正确判断数组内是否包含某个类型为object的element 关于Array.prototype.includesArray.prototype.includes() - JavaScript | MDN Stackoverflow: stackoverflow上说includes判断相等的原理是===（strict equality operator），比较的是object的reference而不是value type。 所以Array.includes()无法用于判断数组中是否存在某个对象。 解决方法 先在每个对象元素中存储一个id属性，并且对象元素的id都是唯一值。再用some和every方法（不过这种情况需要有个外来的输入值在未加入数组时就与数组内的各元素作对比，而不是在已有的数组中去重）凭借obj.id判断。","categories":[{"name":"Front-end","slug":"Front-end","permalink":"http://example.com/categories/Front-end/"}],"tags":[{"name":"Solved","slug":"Solved","permalink":"http://example.com/tags/Solved/"},{"name":"JavaScript","slug":"JavaScript","permalink":"http://example.com/tags/JavaScript/"}]},{"title":"20210831 - React - Cannot read property 'map' of undefined","slug":"20210831 - React - Cannot read property 'map' of undefined","date":"2021-08-30T16:00:00.000Z","updated":"2022-02-22T10:55:44.041Z","comments":true,"path":"2021/08/31/20210831 - React - Cannot read property 'map' of undefined/","link":"","permalink":"http://example.com/2021/08/31/20210831%20-%20React%20-%20Cannot%20read%20property%20'map'%20of%20undefined/","excerpt":"","text":"今天遇到了这个error Solutions:React - Cannot read property ‘map’ of undefined 好吧，其实是我在App中给Person传递property的时候，property的名字少写了一个字母。。。而且VSCode竟然也给了我错误的名字提示。。。 另外在做2.14 weather的练习时也遇到了这种’Can’t read xxx of undefined’情况。 一个解释： You should know when data hasn’t been loaded yet and you cannot render. Usually a simple if and return null is enough in that case if (example == null) { return null}","categories":[{"name":"Front-end","slug":"Front-end","permalink":"http://example.com/categories/Front-end/"}],"tags":[{"name":"React","slug":"React","permalink":"http://example.com/tags/React/"},{"name":"Solved","slug":"Solved","permalink":"http://example.com/tags/Solved/"}]},{"title":"20210831 - 如何实现Case-insensitive","slug":"20210831 - 如何实现Case-insensitive","date":"2021-08-30T16:00:00.000Z","updated":"2022-02-22T10:55:35.729Z","comments":true,"path":"2021/08/31/20210831 - 如何实现Case-insensitive/","link":"","permalink":"http://example.com/2021/08/31/20210831%20-%20%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0Case-insensitive/","excerpt":"","text":"把两边的字符串都转换为同一种形式，比如都转换成大写（toUpperCase()）或者都转换成小写（toLowerCase()），就可以实现case-insensitive了。","categories":[{"name":"Front-end","slug":"Front-end","permalink":"http://example.com/categories/Front-end/"}],"tags":[{"name":"Solved","slug":"Solved","permalink":"http://example.com/tags/Solved/"},{"name":"JavaScript","slug":"JavaScript","permalink":"http://example.com/tags/JavaScript/"}]},{"title":"20210827 - Question about Key Attribute in React","slug":"20210827 - Question about Key Attribute in React","date":"2021-08-26T16:00:00.000Z","updated":"2022-02-24T06:09:15.447Z","comments":true,"path":"2021/08/27/20210827 - Question about Key Attribute in React/","link":"","permalink":"http://example.com/2021/08/27/20210827%20-%20Question%20about%20Key%20Attribute%20in%20React/","excerpt":"","text":"ReferenceIndex as a key is an anti-pattern Index as a key is an anti-pattern ExamplesExample 1WRONG: 1234567891011121314151617181920212223import React from &quot;react&quot;;const Note = (&#123;note&#125;) =&gt; &#123; return ( &lt;li key=&#123;note.id&#125;&gt;&#123;note.content&#125;&lt;/li&gt; )&#125;const App = (&#123; notes &#125;) =&gt; &#123; return ( &lt;div&gt; &lt;h1&gt;Notes&lt;/h1&gt; &lt;ul&gt; &#123;notes.map(note =&gt; &lt;Note note=&#123;note&#125;/&gt; )&#125; &lt;/ul&gt; &lt;/div&gt; )&#125;export default App; Error I got: index.js:1 Warning: Each child in a list should have a unique “key” prop.Check the render method of App. See https://reactjs.org/link/warning-keys for more information.at Note (http://localhost:3000/static/js/main.chunk.js:24:3)at App (http://localhost:3000/static/js/main.chunk.js:38:3) CORRECT: 1234567891011121314151617181920212223import React from &quot;react&quot;;const Note = (&#123;note&#125;) =&gt; &#123; return ( &lt;li&gt;&#123;note.content&#125;&lt;/li&gt; )&#125;const App = (&#123; notes &#125;) =&gt; &#123; return ( &lt;div&gt; &lt;h1&gt;Notes&lt;/h1&gt; &lt;ul&gt; &#123;notes.map(note =&gt; &lt;Note key=&#123;note.id&#125; note=&#123;note&#125;/&gt; )&#125; &lt;/ul&gt; &lt;/div&gt; )&#125;export default App; 💡 Note that the key attribute must now be defined for the Note components, and not for the li tags like before. Example 2一个正确的例子： 123456789101112131415161718192021222324import React from &#x27;react&#x27;const Header = (&#123;name&#125;) =&gt; ( &lt;h1&gt;&#123;name&#125;&lt;/h1&gt;)const Content = (&#123;parts&#125;) =&gt; &#123; return &lt;Part parts=&#123;parts&#125;/&gt;&#125;const Part = (&#123;parts&#125;) =&gt; &#123; return parts.map(part =&gt; &lt;p key=&#123;part.id&#125;&gt;&#123;part.name&#125; &#123;part.exercises&#125;&lt;/p&gt;)&#125;const Course = (&#123;course&#125;) =&gt; &#123; return ( &lt;div&gt; &lt;Header name=&#123;course.name&#125;/&gt; &lt;Content parts=&#123;course.parts&#125;/&gt; &lt;/div&gt; )&#125;export default Course 也可以这样写 123456789101112131415161718192021222324import React from &#x27;react&#x27;const Header = (&#123;name&#125;) =&gt; ( &lt;h1&gt;&#123;name&#125;&lt;/h1&gt;)const Content = (&#123;parts&#125;) =&gt; &#123; return parts.map(part =&gt; &lt;Part key=&#123;part.id&#125; part=&#123;part&#125;/&gt;)&#125;const Part = (&#123;part&#125;) =&gt; &#123; return &lt;p&gt;&#123;part.name&#125; &#123;part.exercises&#125;&lt;/p&gt;&#125;const Course = (&#123;course&#125;) =&gt; &#123; return ( &lt;div&gt; &lt;Header name=&#123;course.name&#125;/&gt; &lt;Content parts=&#123;course.parts&#125;/&gt; &lt;/div&gt; )&#125;export default Course 这两种形式都可以，不过推荐第二种，各个Component的功能比较清晰明确。 Example 312345678910111213141516const Course = (&#123;courses&#125;) =&gt; &#123; return ( &lt;div&gt; &#123;courses.map(course =&gt; &#123; return ( &lt;div&gt; &lt;Header key=&#123;course.id&#125; name=&#123;course.name&#125;/&gt; &lt;Content key=&#123;course.id&#125; parts=&#123;course.parts&#125;/&gt; &lt;/div&gt; ) &#125;)&#125; &lt;/div&gt; )&#125;export default Course The errors I got: Pass the key attribute to &lt;div&gt;, it works well and no errors pop up 1234567891011121314const Course = (&#123;courses&#125;) =&gt; &#123; return ( &lt;div&gt; &#123;courses.map(course =&gt; &#123; return ( &lt;div key=&#123;course.id&#125;&gt; &lt;Header name=&#123;course.name&#125;/&gt; &lt;Content parts=&#123;course.parts&#125;/&gt; &lt;/div&gt; ) &#125;)&#125; &lt;/div&gt; )&#125; Some notes key属性要放置到最外层的元素或组件中 key的值最好不要为index 最外层是&lt;React.Fragment&gt;时也一样要放key属性。","categories":[{"name":"Front-end","slug":"Front-end","permalink":"http://example.com/categories/Front-end/"}],"tags":[{"name":"React","slug":"React","permalink":"http://example.com/tags/React/"},{"name":"Solved","slug":"Solved","permalink":"http://example.com/tags/Solved/"}]},{"title":"20210827 - 使用Github第一天遇到的错误/问题/解决方法","slug":"20210827 - 使用Github第一天遇到的错误问题解决方法","date":"2021-08-26T16:00:00.000Z","updated":"2022-02-22T12:09:40.151Z","comments":true,"path":"2021/08/27/20210827 - 使用Github第一天遇到的错误问题解决方法/","link":"","permalink":"http://example.com/2021/08/27/20210827%20-%20%E4%BD%BF%E7%94%A8Github%E7%AC%AC%E4%B8%80%E5%A4%A9%E9%81%87%E5%88%B0%E7%9A%84%E9%94%99%E8%AF%AF%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/","excerpt":"","text":"1. Failed to connect to github.com port 443:connection timed outGitHub无法访问、443 Operation timed out的解决办法 解决 Failed to connect to github.com port 443:connection timed out_五味鱼头的草稿纸-CSDN博客 关于Git的问题解决：Failed to connect to github.com port 443:connection timed out_m0_50930469的博客-CSDN博客 2. OpenSSL SSL_read: Connection was reset, errno 10054Git报错解决：OpenSSL SSL_read: Connection was reset, errno 10054 错误解决_危险、的博客-CSDN博客 3. Oops! It’s main branch!!! Not master!!!“Couldn’t find remote ref master” 4. ***error: src refspec main does not match anyerror: failed to push some refs to ‘https://github.com/XXXXX&#39;*** Can’t push to main on new git repo 5. add PAT (Personal Access Token)Support for password authentication was removed. Please use a personal access token instead github 配置使用 personal access token 认证","categories":[{"name":"Front-end","slug":"Front-end","permalink":"http://example.com/categories/Front-end/"}],"tags":[{"name":"Solved","slug":"Solved","permalink":"http://example.com/tags/Solved/"},{"name":"Git","slug":"Git","permalink":"http://example.com/tags/Git/"}]},{"title":"关于选择器优先级和继承的概念","slug":"关于选择器优先级和继承的概念","date":"2021-07-14T16:00:00.000Z","updated":"2022-02-22T11:26:46.370Z","comments":true,"path":"2021/07/15/关于选择器优先级和继承的概念/","link":"","permalink":"http://example.com/2021/07/15/%E5%85%B3%E4%BA%8E%E9%80%89%E6%8B%A9%E5%99%A8%E4%BC%98%E5%85%88%E7%BA%A7%E5%92%8C%E7%BB%A7%E6%89%BF%E7%9A%84%E6%A6%82%E5%BF%B5/","excerpt":"","text":"前言最近在读《深入解析CSS》。 读到第2章的时候发现自己对于选择器优先级的概念和继承的概念混为一谈了。 借用第2章“自定义属性”的例子，利用自定义属性为两块面板设置不同的颜色。我的困惑出现在给第二个面板设置不同字体颜色和背景颜色后，第二个面板原来的字体颜色和背景颜色都被新颜色覆盖。 当时的想法是：:root是伪类选择器，优先级相当于类，.dark是类选择器，二者优先级相等，然后考虑代码顺序，但将:root声明块移至.dark下面，发现效果还是和之前一样。为了进一步明确我的困惑，在外层又加了一个id=&quot;test&quot;的div元素，定义了自定义属性，设置不同的颜色，此时#test的优先级高于.dark，总该会出现#test的效果了吧，结果却还是和之前一样。 上面的”折腾“忽略了一个重要的前提：上述的选择器并非直接作用于同一个元素。因此考虑它们的优先级是毫无意义的。 HTML部分： 12345678910111213141516171819&lt;body&gt; &lt;div id=&quot;test&quot;&gt; &lt;div class=&quot;panel&quot;&gt; &lt;h2&gt;Single-origin&lt;/h2&gt; &lt;div class=&quot;body&quot;&gt; Lorem ipsum dolor sit amet consectetur adipisicing elit. Aperiam cumque deserunt omnis sed autem molestias et reprehenderit voluptatum odit voluptas fugiat reiciendis, corrupti nihil maiores. Pariatur laboriosam doloribus aspernatur. Accusamus! &lt;/div&gt; &lt;/div&gt; &lt;aside class=&quot;dark&quot;&gt; &lt;div class=&quot;panel&quot;&gt; &lt;h2&gt;Single-origin&lt;/h2&gt; &lt;div class=&quot;body&quot;&gt; Lorem ipsum dolor sit amet consectetur adipisicing elit. Aspernatur sunt perspiciatis fugit. Fuga nostrum ea error, autem officiis dolores tenetur necessitatibus doloribus mollitia qui veritatis cumque, saepe impedit inventore ab? &lt;/div&gt; &lt;/div&gt; &lt;/aside&gt; &lt;/div&gt;&lt;/body&gt; CSS部分： 123456789101112131415161718192021222324252627282930313233:root &#123; --main-bg: #fff; --main-color: #000;&#125;#test &#123; --main-bg: #365; --main-color: #000;&#125;.panel &#123; font-size: 1rem; padding: 1em; border: 1px solid #999; border-radius: .5em; background-color: var(--main-bg); color: var(--main-color);&#125;.panel &gt; h2 &#123; margin-top: 0; font-size: .8em; font-weight: bold; text-transform: uppercase;&#125;.dark &#123; margin-top: 2em; padding: 1em; background-color: #999; --main-bg: #333; --main-color: #fff;&#125; 总结选择器优先级和继承，最终出现的效果可能都会导致原来的样式变化，但两者是不同的概念。 选择器优先级本质上是用来解决声明冲突的规则。因此在考虑选择器优先级的时候，首先看这两个选择器是否都（至少）作用于同一个元素，因为只有作用于同一个元素才有可能发生声明冲突，如果作用于同一个元素，那么就根据优先级规则预测元素的效果； 而继承本质上是添加样式的一种方式，与选择器的优先级和声明块的顺序没有直接关系。如果一个元素的某个属性（可继承的属性）没有层叠值，则会继承父元素的值，将属性加到body上会在整个网页上生效，而将属性加到特定元素上，则只会被它的后代元素继承，并且继承属性会顺序传递给后代元素，直到它被层叠值覆盖。","categories":[{"name":"Front-end","slug":"Front-end","permalink":"http://example.com/categories/Front-end/"}],"tags":[{"name":"CSS","slug":"CSS","permalink":"http://example.com/tags/CSS/"}]},{"title":"Hello World","slug":"hello-world","date":"2021-03-31T06:25:08.944Z","updated":"2022-02-22T12:10:23.525Z","comments":true,"path":"2021/03/31/hello-world/","link":"","permalink":"http://example.com/2021/03/31/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment 1const a = 0; 123456789101112.outer &#123; position: relative;&#125;.inner &#123; width: 200px; height: 200px; border-radius: 50%; position: absolute; top: calc(50% - 100px); left: calc(50% - 100px);&#125;","categories":[{"name":"111","slug":"111","permalink":"http://example.com/categories/111/"}],"tags":[{"name":"test","slug":"test","permalink":"http://example.com/tags/test/"}]},{"title":"Template","slug":"template","date":"2020-12-31T16:00:00.000Z","updated":"2022-02-22T12:10:59.997Z","comments":true,"path":"2021/01/01/template/","link":"","permalink":"http://example.com/2021/01/01/template/","excerpt":"","text":"TemplateIt’s just a template…","categories":[{"name":"Template","slug":"Template","permalink":"http://example.com/categories/Template/"}],"tags":[{"name":"template","slug":"template","permalink":"http://example.com/tags/template/"}]}],"categories":[{"name":"Front-end","slug":"Front-end","permalink":"http://example.com/categories/Front-end/"},{"name":"111","slug":"111","permalink":"http://example.com/categories/111/"},{"name":"Template","slug":"Template","permalink":"http://example.com/categories/Template/"}],"tags":[{"name":"Half-solved","slug":"Half-solved","permalink":"http://example.com/tags/Half-solved/"},{"name":"Heroku","slug":"Heroku","permalink":"http://example.com/tags/Heroku/"},{"name":"React router","slug":"React-router","permalink":"http://example.com/tags/React-router/"},{"name":"Solved","slug":"Solved","permalink":"http://example.com/tags/Solved/"},{"name":"DOM","slug":"DOM","permalink":"http://example.com/tags/DOM/"},{"name":"CSS","slug":"CSS","permalink":"http://example.com/tags/CSS/"},{"name":"Material UI","slug":"Material-UI","permalink":"http://example.com/tags/Material-UI/"},{"name":"Git","slug":"Git","permalink":"http://example.com/tags/Git/"},{"name":"JavaScript","slug":"JavaScript","permalink":"http://example.com/tags/JavaScript/"},{"name":"Node.js","slug":"Node-js","permalink":"http://example.com/tags/Node-js/"},{"name":"Promise","slug":"Promise","permalink":"http://example.com/tags/Promise/"},{"name":"await/async","slug":"await-async","permalink":"http://example.com/tags/await-async/"},{"name":"Ajax","slug":"Ajax","permalink":"http://example.com/tags/Ajax/"},{"name":"React","slug":"React","permalink":"http://example.com/tags/React/"},{"name":"Arrow function","slug":"Arrow-function","permalink":"http://example.com/tags/Arrow-function/"},{"name":"Closure","slug":"Closure","permalink":"http://example.com/tags/Closure/"},{"name":"MongoDB","slug":"MongoDB","permalink":"http://example.com/tags/MongoDB/"},{"name":"Mongoose","slug":"Mongoose","permalink":"http://example.com/tags/Mongoose/"},{"name":"ES6","slug":"ES6","permalink":"http://example.com/tags/ES6/"},{"name":"JSON","slug":"JSON","permalink":"http://example.com/tags/JSON/"},{"name":"HTTP","slug":"HTTP","permalink":"http://example.com/tags/HTTP/"},{"name":"Unsolved","slug":"Unsolved","permalink":"http://example.com/tags/Unsolved/"},{"name":"Status code","slug":"Status-code","permalink":"http://example.com/tags/Status-code/"},{"name":"Dotenv","slug":"Dotenv","permalink":"http://example.com/tags/Dotenv/"},{"name":"test","slug":"test","permalink":"http://example.com/tags/test/"},{"name":"template","slug":"template","permalink":"http://example.com/tags/template/"}]}