<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Xin&#39;s Blog</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-02-24T08:33:49.440Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Xin</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>20211222 - React Router doesn’t work after deploying on Heroku</title>
    <link href="http://example.com/2021/12/22/20211222%20-%20React%20Router%20doesn%E2%80%99t%20work%20after%20deploying%20on%20Heroku/"/>
    <id>http://example.com/2021/12/22/20211222%20-%20React%20Router%20doesn%E2%80%99t%20work%20after%20deploying%20on%20Heroku/</id>
    <published>2021-12-21T16:00:00.000Z</published>
    <updated>2022-02-24T08:33:49.440Z</updated>
    
    <content type="html"><![CDATA[<h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><p><a href="https://stackoverflow.com/questions/41772411/react-routing-works-in-local-machine-but-not-heroku">React Routing works in local machine but not Heroku</a></p><p><a href="https://stackoverflow.com/questions/55102453/how-to-use-react-route-on-heroku">How to use react route on heroku?</a></p><p><a href="https://medium.com/jeremy-gottfrieds-tech-blog/tutorial-how-to-deploy-a-production-react-app-to-heroku-c4831dfcfa08">Tutorial: how to deploy a production React app to Heroku</a></p><p><a href="https://stackoverflow.com/questions/44723509/react-routing-works-in-locally-but-not-heroku">React Routing works in locally but not Heroku</a></p><p><a href="https://stackoverflow.com/questions/52852877/static-json-not-working-for-reactjs-routes-and-heroku">static.json not working for ReactJS routes and Heroku</a></p><p><a href="https://stackoverflow.com/questions/51866714/react-router-routes-dont-work-when-deployed-to-heroku/51867087">React Router Routes Don’t work when deployed to Heroku</a></p><p><a href="https://stackoverflow.com/questions/42684809/react-router-vs-react-router-dom-when-to-use-one-or-the-other">react-router vs react-router-dom, when to use one or the other?</a></p><p><a href="https://stackoverflow.com/questions/64838587/how-to-properly-use-usehistory-from-react-router-dom">How to properly use useHistory () from react-router-dom?</a></p><p><a href="https://stackoverflow.com/questions/53539314/what-is-withrouter-for-in-react-router-dom">What is withRouter for in react-router-dom?</a></p><p><a href="https://stackoverflow.com/questions/64295886/react-router-doesnt-seen-to-work-on-production-with-heroku">React router doesn’t seen to work on production with heroku</a></p><p><a href="https://stackoverflow.com/questions/57736727/after-heroku-deployment-it-looks-like-cant-find-my-react-app-files-get-404">After heroku deployment, it looks like can’t find my react app files: GET / 404</a></p><p>An explanation of why router doesn’t work after deployed on Heroku</p><p><a href="https://www.reddit.com/r/reactjs/comments/apk207/react_router_urls_not_working_in_heroku/">React router urls not working in heroku?</a></p><p><img src="https://s3.us-west-2.amazonaws.com/secure.notion-static.com/775489c8-00da-4057-8e0f-07df929a1035/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAT73L2G45EIPT3X45/20220224/us-west-2/s3/aws4_request&X-Amz-Date=20220224T083135Z&X-Amz-Expires=86400&X-Amz-Signature=a6b12dc2380cae4e38139f0adf82f651dbd534276cc1b4f24dde6f9681aa1404&X-Amz-SignedHeaders=host&response-content-disposition=filename%20=%22Untitled.png%22&x-id=GetObject"></p><p><a href="https://www.reddit.com/r/reactjs/comments/apk207/react_router_urls_not_working_in_heroku/egbgse9/">soggypizza1’s comment from discussion “React router urls not working in heroku?”</a></p><p><a href="https://brandoncantello.medium.com/using-history-to-navigate-your-react-app-from-outside-a-component-40ea74ba4402">Using ‘history’ to navigate your React app from outside a component</a></p><p>终于！！！！BrowserRouter换成HashRouter可以了！！！但是HashRouter似乎适合没有backend的application</p><p><img src="https://s3.us-west-2.amazonaws.com/secure.notion-static.com/cbb5a6d8-0fbe-4447-9b31-2590cb921e24/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAT73L2G45EIPT3X45/20220224/us-west-2/s3/aws4_request&X-Amz-Date=20220224T083231Z&X-Amz-Expires=86400&X-Amz-Signature=57ee4cb0d9029821f8af15163779c451873d40bef73fdfb67ef17ab6e1cfc941&X-Amz-SignedHeaders=host&response-content-disposition=filename%20=%22Untitled.png%22&x-id=GetObject"></p><p><a href="https://stackoverflow.com/questions/65676650/react-router-working-locally-but-not-deployed-on-heroku">React Router working locally but not deployed on heroku</a></p><p><a href="https://stackoverflow.com/questions/27928372/react-router-urls-dont-work-when-refreshing-or-writing-manually">React-router urls don’t work when refreshing or writing manually</a></p><p><img src="https://s3.us-west-2.amazonaws.com/secure.notion-static.com/1011ba77-af2e-4c61-a865-59e2c464c5bd/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAT73L2G45EIPT3X45/20220224/us-west-2/s3/aws4_request&X-Amz-Date=20220224T083327Z&X-Amz-Expires=86400&X-Amz-Signature=552119f9f10c0eaf47b95e4ad047f5d2f363236aea5dece75b142bb4638ed1ce&X-Amz-SignedHeaders=host&response-content-disposition=filename%20=%22Untitled.png%22&x-id=GetObject"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;相关链接&quot;&gt;&lt;a href=&quot;#相关链接&quot; class=&quot;headerlink&quot; title=&quot;相关链接&quot;&gt;&lt;/a&gt;相关链接&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/41772411/react-ro</summary>
      
    
    
    
    <category term="Front-end" scheme="http://example.com/categories/Front-end/"/>
    
    
    <category term="Half-solved" scheme="http://example.com/tags/Half-solved/"/>
    
    <category term="Heroku" scheme="http://example.com/tags/Heroku/"/>
    
    <category term="React router" scheme="http://example.com/tags/React-router/"/>
    
  </entry>
  
  <entry>
    <title>20211216 - e.target.file[0]</title>
    <link href="http://example.com/2021/12/16/20211216%20-%20e.target.file[0]/"/>
    <id>http://example.com/2021/12/16/20211216%20-%20e.target.file[0]/</id>
    <published>2021-12-15T16:00:00.000Z</published>
    <updated>2022-02-24T08:27:09.107Z</updated>
    
    <content type="html"><![CDATA[<p>e.target.file → filelist:</p><p><img src="https://s3.us-west-2.amazonaws.com/secure.notion-static.com/e69c246b-4a3f-4b40-bf14-ff645436fedc/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAT73L2G45EIPT3X45/20220224/us-west-2/s3/aws4_request&X-Amz-Date=20220224T082635Z&X-Amz-Expires=86400&X-Amz-Signature=3e9f787285f4dda9d8bc6a6048f2472e8085413c01e3b0d40ccf411931882d2a&X-Amz-SignedHeaders=host&response-content-disposition=filename%20=%22Untitled.png%22&x-id=GetObject" alt="Untitled"></p><p>e.target.file[0]:</p><p><img src="https://s3.us-west-2.amazonaws.com/secure.notion-static.com/2551d0d5-81a3-4b5e-98c9-454bba20786c/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAT73L2G45EIPT3X45/20220224/us-west-2/s3/aws4_request&X-Amz-Date=20220224T082647Z&X-Amz-Expires=86400&X-Amz-Signature=c4b54bef4307ecf289e6923d645235c6f55c386c7132dff82f6a29df314e4a28&X-Amz-SignedHeaders=host&response-content-disposition=filename%20=%22Untitled.png%22&x-id=GetObject"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;e.target.file → filelist:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://s3.us-west-2.amazonaws.com/secure.notion-static.com/e69c246b-4a3f-4b40-bf14-ff645436fe</summary>
      
    
    
    
    <category term="Front-end" scheme="http://example.com/categories/Front-end/"/>
    
    
    <category term="Solved" scheme="http://example.com/tags/Solved/"/>
    
    <category term="DOM" scheme="http://example.com/tags/DOM/"/>
    
  </entry>
  
  <entry>
    <title>20211215 - &#39;Tag嵌套：`p` 不能在 `div` 里面，`div` 也不能在 `p` 里面&#39;</title>
    <link href="http://example.com/2021/12/15/20211215%20-%20Tag%E5%B5%8C%E5%A5%97%EF%BC%9A%60p%60%20%E4%B8%8D%E8%83%BD%E5%9C%A8%20%60div%60%20%E9%87%8C%E9%9D%A2%EF%BC%8C%60div%60%20%E4%B9%9F%E4%B8%8D%E8%83%BD%E5%9C%A8%20%60p%60%20%E9%87%8C%E9%9D%A2/"/>
    <id>http://example.com/2021/12/15/20211215%20-%20Tag%E5%B5%8C%E5%A5%97%EF%BC%9A%60p%60%20%E4%B8%8D%E8%83%BD%E5%9C%A8%20%60div%60%20%E9%87%8C%E9%9D%A2%EF%BC%8C%60div%60%20%E4%B9%9F%E4%B8%8D%E8%83%BD%E5%9C%A8%20%60p%60%20%E9%87%8C%E9%9D%A2/</id>
    <published>2021-12-14T16:00:00.000Z</published>
    <updated>2022-02-24T08:36:22.391Z</updated>
    
    <content type="html"><![CDATA[<p>因为desc中的内容被解析为html之后，有些会出现<code>&lt;p&gt;</code>标签</p><p><img src="https://s3.us-west-2.amazonaws.com/secure.notion-static.com/e4291401-b838-4437-a3e5-4106bacb9a01/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAT73L2G45EIPT3X45/20220224/us-west-2/s3/aws4_request&X-Amz-Date=20220224T082057Z&X-Amz-Expires=86400&X-Amz-Signature=9765589f8837648ca56b87fd63f5af751d576175e2d0193b85901d2bc99d69c9&X-Amz-SignedHeaders=host&response-content-disposition=filename%20=%22Untitled.png%22&x-id=GetObject"></p><h1 id="Solution-temporary"><a href="#Solution-temporary" class="headerlink" title="Solution (temporary)"></a>Solution (temporary)</h1><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;Typography variant=<span class="string">&#x27;body2&#x27;</span> component=<span class="string">&#x27;h6&#x27;</span>&gt;</span><br><span class="line">     &#123;ReactHtmlParser(selectedPod.description)&#125;</span><br><span class="line">&lt;/Typography&gt;</span><br></pre></td></tr></table></figure><ul><li>实际dom中为h6，变体为p</li><li>Typography默认的component是div。</li></ul><p><a href="https://juejin.cn/post/6861879319829053454">p 标签里面不能嵌套 div 标签 - 掘金</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;因为desc中的内容被解析为html之后，有些会出现&lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;标签&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://s3.us-west-2.amazonaws.com/secure.notion-static.com/e4291401-</summary>
      
    
    
    
    <category term="Front-end" scheme="http://example.com/categories/Front-end/"/>
    
    
    <category term="Half-solved" scheme="http://example.com/tags/Half-solved/"/>
    
    <category term="CSS" scheme="http://example.com/tags/CSS/"/>
    
    <category term="Material UI" scheme="http://example.com/tags/Material-UI/"/>
    
  </entry>
  
  <entry>
    <title>20211115 - A component is changing an uncontrolled Autocomplete to be controlled</title>
    <link href="http://example.com/2021/11/15/20211115%20-%20A%20component%20is%20changing%20an%20uncontrolled%20Autocomplete%20to%20be%20controlled/"/>
    <id>http://example.com/2021/11/15/20211115%20-%20A%20component%20is%20changing%20an%20uncontrolled%20Autocomplete%20to%20be%20controlled/</id>
    <published>2021-11-14T16:00:00.000Z</published>
    <updated>2022-02-24T07:58:10.138Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s3.us-west-2.amazonaws.com/secure.notion-static.com/829de34a-0bfc-4f05-a4c7-91ff0ec837ed/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAT73L2G45EIPT3X45/20220224/us-west-2/s3/aws4_request&X-Amz-Date=20220224T075658Z&X-Amz-Expires=86400&X-Amz-Signature=f32258f76fb60dc0c8fba5b5763d8734824d8030167c402b058337727a94d170&X-Amz-SignedHeaders=host&response-content-disposition=filename%20=%22Untitled.png%22&x-id=GetObject"></p><p>autocomplete 有两个独立的值，value 和 inputValue，各自都需要state来更新</p><p>而且注意这里 autocomplete 的value的一个object，所以value的state初始值也应该是一个object。否则inputValue 会变成 undefined</p><p><img src="https://s3.us-west-2.amazonaws.com/secure.notion-static.com/f4c9ba83-8d5b-459a-9f87-93d3f3e17b3a/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAT73L2G45EIPT3X45/20220224/us-west-2/s3/aws4_request&X-Amz-Date=20220224T075736Z&X-Amz-Expires=86400&X-Amz-Signature=365a3a8b06398b9dd1f300c01de796de5aaee8ebff6a073f2b55733d6a3583f0&X-Amz-SignedHeaders=host&response-content-disposition=filename%20=%22Untitled.png%22&x-id=GetObject"></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"><span class="keyword">import</span> TextField <span class="keyword">from</span> <span class="string">&#x27;@material-ui/core/TextField&#x27;</span></span><br><span class="line"><span class="keyword">import</span> Autocomplete <span class="keyword">from</span> <span class="string">&#x27;@material-ui/lab/Autocomplete&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> options = [<span class="string">&#x27;Option 1&#x27;</span>, <span class="string">&#x27;Option 2&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="function"><span class="keyword">function</span> <span class="title">AutocompleteLab</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> [value, setValue] = React.**useState(options[<span class="number">0</span>])**</span><br><span class="line">  <span class="keyword">const</span> [inputValue, setInputValue] = React.useState(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;div&gt;&#123;<span class="string">`value: <span class="subst">$&#123;value !== <span class="literal">null</span> ? <span class="string">`&#x27;<span class="subst">$&#123;value&#125;</span>&#x27;`</span> : <span class="string">&#x27;null&#x27;</span>&#125;</span>`</span>&#125;&lt;/div&gt;</span><br><span class="line">      &lt;div&gt;&#123;<span class="string">`inputValue: &#x27;<span class="subst">$&#123;inputValue&#125;</span>&#x27;`</span>&#125;&lt;/div&gt;</span><br><span class="line">      &lt;br /&gt;</span><br><span class="line">      &lt;Autocomplete</span><br><span class="line">        value=&#123;value&#125;</span><br><span class="line">        onChange=&#123;<span class="function">(<span class="params">_, newValue</span>) =&gt;</span> &#123;</span><br><span class="line">          setValue(newValue)</span><br><span class="line">        &#125;&#125;</span><br><span class="line">        inputValue=&#123;inputValue&#125;</span><br><span class="line">        onInputChange=&#123;<span class="function">(<span class="params">_, newInputValue</span>) =&gt;</span> &#123;</span><br><span class="line">          setInputValue(newInputValue)</span><br><span class="line">        &#125;&#125;</span><br><span class="line">        options=&#123;options&#125;</span><br><span class="line">        style=&#123;&#123; <span class="attr">width</span>: <span class="number">300</span> &#125;&#125;</span><br><span class="line">        renderInput=&#123;<span class="function">(<span class="params">params</span>) =&gt;</span> <span class="xml"><span class="tag">&lt;<span class="name">TextField</span> &#123;<span class="attr">...params</span>&#125; <span class="attr">label</span>=<span class="string">&quot;Name&quot;</span> <span class="attr">variant</span>=<span class="string">&quot;outlined&quot;</span> /&gt;</span></span>&#125;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://stackoverflow.com/questions/63295924/a-component-is-changing-an-uncontrolled-autocomplete-to-be-controlled">A component is changing an uncontrolled Autocomplete to be controlled</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://s3.us-west-2.amazonaws.com/secure.notion-static.com/829de34a-0bfc-4f05-a4c7-91ff0ec837ed/Untitled.png?X-Amz-Algorithm=A</summary>
      
    
    
    
    <category term="Front-end" scheme="http://example.com/categories/Front-end/"/>
    
    
    <category term="Solved" scheme="http://example.com/tags/Solved/"/>
    
    <category term="Material UI" scheme="http://example.com/tags/Material-UI/"/>
    
  </entry>
  
  <entry>
    <title>20211115 - 修改水平方向的滚动条样式</title>
    <link href="http://example.com/2021/11/15/20211115%20-%20%E4%BF%AE%E6%94%B9%E6%B0%B4%E5%B9%B3%E6%96%B9%E5%90%91%E7%9A%84%E6%BB%9A%E5%8A%A8%E6%9D%A1%E6%A0%B7%E5%BC%8F/"/>
    <id>http://example.com/2021/11/15/20211115%20-%20%E4%BF%AE%E6%94%B9%E6%B0%B4%E5%B9%B3%E6%96%B9%E5%90%91%E7%9A%84%E6%BB%9A%E5%8A%A8%E6%9D%A1%E6%A0%B7%E5%BC%8F/</id>
    <published>2021-11-14T16:00:00.000Z</published>
    <updated>2022-02-24T07:55:25.372Z</updated>
    
    <content type="html"><![CDATA[<p>修改 height 的值就是修改水平滚动条的高度</p><p><img src="https://s3.us-west-2.amazonaws.com/secure.notion-static.com/c252a73c-d3f9-46f2-bcdf-e0e2ab32a280/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAT73L2G45EIPT3X45/20220224/us-west-2/s3/aws4_request&X-Amz-Date=20220224T075442Z&X-Amz-Expires=86400&X-Amz-Signature=02ea8db5a0b8ea59fdb4cda4b4964e91b51d9d3137eff7022eb2108792f1b67b&X-Amz-SignedHeaders=host&response-content-disposition=filename%20=%22Untitled.png%22&x-id=GetObject"></p><p><a href="https://stackoverflow.com/questions/44334106/how-can-i-style-horizontal-scrollbar-by-css">How can I style horizontal scrollbar by CSS?</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;修改 height 的值就是修改水平滚动条的高度&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://s3.us-west-2.amazonaws.com/secure.notion-static.com/c252a73c-d3f9-46f2-bcdf-e0e2ab32a28</summary>
      
    
    
    
    <category term="Front-end" scheme="http://example.com/categories/Front-end/"/>
    
    
    <category term="Solved" scheme="http://example.com/tags/Solved/"/>
    
    <category term="CSS" scheme="http://example.com/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>20211102 - OpenSSL SSL_connect Connection was reset in connection to github.com 443</title>
    <link href="http://example.com/2021/11/02/20211102%20-%20OpenSSL%20SSL_connect%20Connection%20was%20reset%20in%20connection%20to%20github%20com443/"/>
    <id>http://example.com/2021/11/02/20211102%20-%20OpenSSL%20SSL_connect%20Connection%20was%20reset%20in%20connection%20to%20github%20com443/</id>
    <published>2021-11-01T16:00:00.000Z</published>
    <updated>2022-02-22T11:55:33.629Z</updated>
    
    <content type="html"><![CDATA[<p>代理相关</p><p><img src="https://s3.us-west-2.amazonaws.com/secure.notion-static.com/095736b5-2abd-4ecd-b96c-171b254a66f4/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAT73L2G45EIPT3X45/20220222/us-west-2/s3/aws4_request&X-Amz-Date=20220222T113841Z&X-Amz-Expires=86400&X-Amz-Signature=8ed2db8d318dadfdc26eeb7965b4129e9ef56d7450ba79e57ba3d7412f10e924&X-Amz-SignedHeaders=host&response-content-disposition=filename%20=%22Untitled.png%22&x-id=GetObject"></p><p><a href="https://blog.csdn.net/qq_37555071/article/details/114260533">【已解决】OpenSSL SSL_connect: Connection was reset in connection to github.com:443_雷恩Layne-CSDN博客</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;代理相关&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://s3.us-west-2.amazonaws.com/secure.notion-static.com/095736b5-2abd-4ecd-b96c-171b254a66f4/Untitled.png?X-Amz</summary>
      
    
    
    
    <category term="Front-end" scheme="http://example.com/categories/Front-end/"/>
    
    
    <category term="Solved" scheme="http://example.com/tags/Solved/"/>
    
    <category term="Git" scheme="http://example.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>20211102 - OpenSSL SSL_read Connection was reset, errno 10054</title>
    <link href="http://example.com/2021/11/02/20211102%20-%20OpenSSL%20SSL_read%20Connection%20was%20reset%20errno%2010054/"/>
    <id>http://example.com/2021/11/02/20211102%20-%20OpenSSL%20SSL_read%20Connection%20was%20reset%20errno%2010054/</id>
    <published>2021-11-01T16:00:00.000Z</published>
    <updated>2022-02-22T11:55:39.741Z</updated>
    
    <content type="html"><![CDATA[<p>遇到的情况是username, email出错</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --<span class="built_in">global</span> http.sslVerify <span class="string">&quot;false&quot;</span></span><br></pre></td></tr></table></figure><p><a href="https://www.cnblogs.com/fairylyl/p/15059437.html">Git 错误：OpenSSL SSL_read: Connection was reset, errno 10054</a></p><p><a href="https://blog.csdn.net/qq_29493173/article/details/114534057">Git报错解决：OpenSSL SSL_read: Connection was reset, errno 10054_Erya Programming learning-CSDN博客</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;遇到的情况是username, email出错&lt;/p&gt;
&lt;figure class=&quot;highlight jsx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;t</summary>
      
    
    
    
    <category term="Front-end" scheme="http://example.com/categories/Front-end/"/>
    
    
    <category term="Solved" scheme="http://example.com/tags/Solved/"/>
    
    <category term="Git" scheme="http://example.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>20211102 - error src refspec main does not match any error failed to push some refs to &#39;https://github.com/xxx/xxx.git&#39;</title>
    <link href="http://example.com/2021/11/02/20211102%20-%20error%20src%20refspec%20main%20does%20not%20match%20any%20error%20failed%20to%20push%20some%20refs%20to%20&#39;httpsgithub.comxxxxxx.git&#39;/"/>
    <id>http://example.com/2021/11/02/20211102%20-%20error%20src%20refspec%20main%20does%20not%20match%20any%20error%20failed%20to%20push%20some%20refs%20to%20&#39;httpsgithub.comxxxxxx.git&#39;/</id>
    <published>2021-11-01T16:00:00.000Z</published>
    <updated>2022-02-22T11:56:02.536Z</updated>
    
    <content type="html"><![CDATA[<p>main master等等问题</p><p><a href="https://stackoverflow.com/questions/65173291/git-push-error-src-refspec-main-does-not-match-any-on-linux">git push error: src refspec main does not match any on linux</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;main master等等问题&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/65173291/git-push-error-src-refspec-main-does-not-match-any-on-linux&quot;</summary>
      
    
    
    
    <category term="Front-end" scheme="http://example.com/categories/Front-end/"/>
    
    
    <category term="Solved" scheme="http://example.com/tags/Solved/"/>
    
    <category term="Git" scheme="http://example.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>20211102 - fatal refusing to merge unrelated histories</title>
    <link href="http://example.com/2021/11/02/20211102%20-%20fatal%20refusing%20to%20merge%20unrelated%20histories/"/>
    <id>http://example.com/2021/11/02/20211102%20-%20fatal%20refusing%20to%20merge%20unrelated%20histories/</id>
    <published>2021-11-01T16:00:00.000Z</published>
    <updated>2022-02-22T11:54:15.394Z</updated>
    
    <content type="html"><![CDATA[<p>在创建了远程仓库并<strong>初始化了README.md、README.en.md文件</strong>，本地<strong>推送或拉取</strong>时出现以下错误：</p><p><strong>fatal: refusing to merge unrelated histories。</strong></p><p><strong>致命的:拒绝合并不相关的历史。</strong></p><p>字面意思可见是历史原因不和造成的。</p><p>原因是远程库和本地库两个分支是两个不同的版本，具有不同的提交历史，所以存在矛盾。</p><p>解决办法：把两段不相干的 分支进行强行合并。</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git pull origin <span class="keyword">master</span> <span class="title">--allow-unrelated-histories</span></span><br></pre></td></tr></table></figure><p><a href="https://www.cnblogs.com/fei-yu9999/p/15115889.html">git fatal: refusing to merge unrelated histories错误（git本地库与远程库历史不相关）</a></p><h1 id="情况"><a href="#情况" class="headerlink" title="情况"></a>情况</h1><p>远程仓库初始化README.md，自动生成默认分支main</p><p>本地仓库master分支<code>git push -u origin master</code>命令，在远程仓库中自动生成master分支，并把文件push进去</p><p>想要把远程仓库上的main和master合并，或者说是让文件都push到main分支上</p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>本地仓库，<code>git branch main</code>，新建main分支</p><p>然后’git checkout main’，<code>git pull origin master --allow-unrelated-histories</code>，将远程仓库的master分支中的文件全部拉到本地新建的main分支</p><p>再<code>git push origin main</code>，把本地main推到远程main</p><p>最后<code>git branch -d main</code>，删除main</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>没有使用git merge，就是临时创建一个本地main，把远程master搬到远程main</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://www.jianshu.com/p/46f9bc2bf939">git合并远程分支</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在创建了远程仓库并&lt;strong&gt;初始化了README.md、README.en.md文件&lt;/strong&gt;，本地&lt;strong&gt;推送或拉取&lt;/strong&gt;时出现以下错误：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;fatal: refusing to merge unrelated</summary>
      
    
    
    
    <category term="Front-end" scheme="http://example.com/categories/Front-end/"/>
    
    
    <category term="Solved" scheme="http://example.com/tags/Solved/"/>
    
    <category term="Git" scheme="http://example.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>20211102 - fatal unable to access &#39;https://github.com/xxx/xxxxx.git/&#39; Empty reply from server</title>
    <link href="http://example.com/2021/11/02/20211102%20-%20fatal%20unable%20to%20access%20&#39;httpsgithub.comxxxxxxxx.git&#39;%20Empty%20reply%20from%20server/"/>
    <id>http://example.com/2021/11/02/20211102%20-%20fatal%20unable%20to%20access%20&#39;httpsgithub.comxxxxxxxx.git&#39;%20Empty%20reply%20from%20server/</id>
    <published>2021-11-01T16:00:00.000Z</published>
    <updated>2022-02-22T11:54:57.073Z</updated>
    
    <content type="html"><![CDATA[<p>Emmm… They recommended restarting the computer…</p><p><a href="https://stackoverflow.com/questions/28364023/gits-error-on-push-empty-reply-from-server">gits error on push Empty reply from server</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Emmm… They recommended restarting the computer…&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/28364023/gits-error-on-push-empty-rep</summary>
      
    
    
    
    <category term="Front-end" scheme="http://example.com/categories/Front-end/"/>
    
    
    <category term="Solved" scheme="http://example.com/tags/Solved/"/>
    
    <category term="Git" scheme="http://example.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>20211102 - git Failed to connect to 127.0.0.1 port xxxx Connection refused</title>
    <link href="http://example.com/2021/11/02/20211102%20-%20git%20Failed%20to%20connect%20to%20127%200%200%201%20port%20xxxx%20Connection%20refused/"/>
    <id>http://example.com/2021/11/02/20211102%20-%20git%20Failed%20to%20connect%20to%20127%200%200%201%20port%20xxxx%20Connection%20refused/</id>
    <published>2021-11-01T16:00:00.000Z</published>
    <updated>2022-02-22T11:54:02.214Z</updated>
    
    <content type="html"><![CDATA[<ul><li>git查看</li></ul><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">查询动态代理</span><br><span class="line">git <span class="built_in">config</span> <span class="comment">--global http.proxy</span></span><br><span class="line">git <span class="built_in">config</span> <span class="comment">--global https.proxy</span></span><br></pre></td></tr></table></figure><p>若是有返回值</p><figure class="highlight tcl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">取消代理</span><br><span class="line">git config --<span class="keyword">global</span> --<span class="keyword">unset</span> <span class="keyword">http</span>.proxy</span><br><span class="line">git config --<span class="keyword">global</span> --<span class="keyword">unset</span> httpx.proxy</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/XH_jing/article/details/115095225">关于使用Git出现”git Failed to connect to 127.0.0.1 port xxxx: Connection refused”的问题解决方案_XH_jing的博客-CSDN博客</a></p><p><a href="https://www.cnblogs.com/ziyue7575/p/12912172.html">Failed to connect to 127.0.0.1 port 1080: Connection refused 解决</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;git查看&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight lua&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;</summary>
      
    
    
    
    <category term="Front-end" scheme="http://example.com/categories/Front-end/"/>
    
    
    <category term="Solved" scheme="http://example.com/tags/Solved/"/>
    
    <category term="Git" scheme="http://example.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>20211025 - git message</title>
    <link href="http://example.com/2021/10/25/20211025%20-%20git%20message/"/>
    <id>http://example.com/2021/10/25/20211025%20-%20git%20message/</id>
    <published>2021-10-24T16:00:00.000Z</published>
    <updated>2022-02-22T11:36:27.491Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Situation"><a href="#Situation" class="headerlink" title="Situation:"></a>Situation:</h1><p><img src="https://s3.us-west-2.amazonaws.com/secure.notion-static.com/0acedd93-b5b0-48c2-88d5-b884302be8ef/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAT73L2G45EIPT3X45/20220222/us-west-2/s3/aws4_request&X-Amz-Date=20220222T113511Z&X-Amz-Expires=86400&X-Amz-Signature=2d3bc70f224bd7e6262fc4f28e6bb157229658d3013c2508b5fcb3be2500bd9b&X-Amz-SignedHeaders=host&response-content-disposition=filename%20=%22Untitled.png%22&x-id=GetObject" alt="Untitled"></p><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution:"></a>Solution:</h1><p><img src="https://s3.us-west-2.amazonaws.com/secure.notion-static.com/a992b375-246f-495b-8e11-09cc7f701b68/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAT73L2G45EIPT3X45/20220222/us-west-2/s3/aws4_request&X-Amz-Date=20220222T113529Z&X-Amz-Expires=86400&X-Amz-Signature=3a95ad3cf507c0fa76972caf084a3f5a2ac3eb0bfa3581200555a363a170f916&X-Amz-SignedHeaders=host&response-content-disposition=filename%20=%22Untitled.png%22&x-id=GetObject" alt="Untitled"></p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference:"></a>Reference:</h1><p><a href="https://stackoverflow.com/questions/19085807/please-enter-a-commit-message-to-explain-why-this-merge-is-necessary-especially">Please enter a commit message to explain why this merge is necessary, especially if it merges an updated upstream into a topic branch</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Situation&quot;&gt;&lt;a href=&quot;#Situation&quot; class=&quot;headerlink&quot; title=&quot;Situation:&quot;&gt;&lt;/a&gt;Situation:&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://s3.us-west-2.amazonaws</summary>
      
    
    
    
    <category term="Front-end" scheme="http://example.com/categories/Front-end/"/>
    
    
    <category term="Solved" scheme="http://example.com/tags/Solved/"/>
    
    <category term="Git" scheme="http://example.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>20211014 - Promise 解决xml2js的返回值问题</title>
    <link href="http://example.com/2021/10/14/20211014%20-%20Promise%20%E8%A7%A3%E5%86%B3xml2js%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC%E9%97%AE%E9%A2%98/"/>
    <id>http://example.com/2021/10/14/20211014%20-%20Promise%20%E8%A7%A3%E5%86%B3xml2js%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC%E9%97%AE%E9%A2%98/</id>
    <published>2021-10-13T16:00:00.000Z</published>
    <updated>2022-02-24T07:47:46.028Z</updated>
    
    <content type="html"><![CDATA[<p>因为Podcast的description只能在feedUrl里找到，无法直接获取，而feedUrl是xml文件，所以获取之后要先转成json格式。parseString import自xml2js的built-in方法。</p><p>修改前：直接接收parseString的返回值</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> desc = parseString(data, <span class="function">(<span class="params">err, result</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (err) &#123;</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// console.log(result)</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// const &#123; rss &#125; = result</span></span><br><span class="line">      <span class="comment">// const &#123; channel &#125; = rss</span></span><br><span class="line">      <span class="comment">// const &#123; description &#125; = channel[0]</span></span><br><span class="line">      <span class="keyword">const</span> &#123; description &#125; = result.rss.channel[<span class="number">0</span>]</span><br><span class="line">      <span class="comment">// console.log(channel)</span></span><br><span class="line">      <span class="built_in">console</span>.log(description)  <span class="comment">// 正常值</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> description</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><p>输出的结果是一个正常值，但返回到json中却是一个又臭又长的对象。。。</p><p><img src="https://s3.us-west-2.amazonaws.com/secure.notion-static.com/fb675d10-62f0-439a-a71a-03e6a6dd1111/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAT73L2G45EIPT3X45/20220224/us-west-2/s3/aws4_request&X-Amz-Date=20220224T074225Z&X-Amz-Expires=86400&X-Amz-Signature=ec97527d57131c2fa2f7951bafab7d85fc9baf3dec70078276b78649dfdf657c&X-Amz-SignedHeaders=host&response-content-disposition=filename%20=%22Untitled.png%22&x-id=GetObject"></p><p>修改后：创建一个Promise，Promise里面有一个函数（executor, which is called automatically），这个executor的参数resolve和reject是两个回调函数（由js本身提供）</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> desc = <span class="keyword">await</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> parseString(data, <span class="function">(<span class="params">err, result</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (err) &#123;</span><br><span class="line">        reject(<span class="literal">null</span>)</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// console.log(result)</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// const &#123; rss &#125; = result</span></span><br><span class="line">        <span class="comment">// const &#123; channel &#125; = rss</span></span><br><span class="line">        <span class="comment">// const &#123; description &#125; = channel[0]</span></span><br><span class="line">        <span class="keyword">const</span> &#123; description &#125; = result.rss.channel[<span class="number">0</span>]</span><br><span class="line">        <span class="comment">// console.log(channel)</span></span><br><span class="line">        <span class="built_in">console</span>.log(description)</span><br><span class="line"></span><br><span class="line">        resolve(description)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)).catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(error)</span><br><span class="line">    &#125;)  <span class="comment">// 记得处理reject的情况！！！否则会报错！暂时的结论：await只有当resolved后才会返回given的result，如果是rejected的情况，会抛出错误，需要catch处理。</span></span><br></pre></td></tr></table></figure><p>成功！</p><p><img src="https://s3.us-west-2.amazonaws.com/secure.notion-static.com/3294ebe5-d1d7-4c2b-b464-4a3b093a9f29/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAT73L2G45EIPT3X45/20220224/us-west-2/s3/aws4_request&X-Amz-Date=20220224T074417Z&X-Amz-Expires=86400&X-Amz-Signature=66da765362e1ed32205ad5fe3cf9e9513edb6483c2a76b04f5b598292715c088&X-Amz-SignedHeaders=host&response-content-disposition=filename%20=%22Untitled.png%22&x-id=GetObject" alt="Untitled"></p><h1 id="重点："><a href="#重点：" class="headerlink" title="重点："></a>重点：</h1><p>When the executor obtains the result, be it soon or late, doesn’t matter, it should call one of these callbacks:</p><ul><li><code>resolve(value)</code> — if the job is finished successfully, with result <code>value</code>.</li><li><code>reject(error)</code> — if an error has occurred, <code>error</code> is the error object.</li></ul><p>The <code>promise</code> object returned by the <code>new Promise</code> constructor has these internal properties:</p><ul><li><code>state</code> — initially <code>&quot;pending&quot;</code>, then changes to either <code>&quot;fulfilled&quot;</code> when <code>resolve</code> is called or <code>&quot;rejected&quot;</code> when <code>reject</code> is called.</li><li><code>result</code> — initially <code>undefined</code>, then changes to <code>value</code> when <code>resolve(value)</code> called or <code>error</code> when <code>reject(error)</code> is called.</li></ul><p>💡 There can be only a single result or an error</p><p>The properties <code>state</code> and <code>result</code> of the Promise object are internal. We can’t directly access them. We can use the methods <code>.then</code>/<code>.catch</code>/<code>.finally</code> for that.</p><blockquote><p>await will wait for a Promise value to resolve, otherwise it’ll just wrap the value it is given in a promise and resolve the promise right away.</p></blockquote><h1 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h1><p><img src="https://s3.us-west-2.amazonaws.com/secure.notion-static.com/d00b59ed-7105-4362-84e8-da4801d7f995/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAT73L2G45EIPT3X45/20220224/us-west-2/s3/aws4_request&X-Amz-Date=20220224T074445Z&X-Amz-Expires=86400&X-Amz-Signature=aae5b578b2e455cdcda684c0461fd3cf4918f04f94f34d25c6035e25b548650c&X-Amz-SignedHeaders=host&response-content-disposition=filename%20=%22Untitled.png%22&x-id=GetObject"></p><p><a href="https://stackoverflow.com/questions/45333264/how-to-get-xml2js-results-out-of-the-parser-in-es6">How to get xml2js results out of the parser in ES6?</a></p><p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise">Promise - JavaScript | MDN</a></p><p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await#promise_rejection">await - JavaScript | MDN</a></p><p><a href="https://javascript.info/promise-basics">Promise</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;因为Podcast的description只能在feedUrl里找到，无法直接获取，而feedUrl是xml文件，所以获取之后要先转成json格式。parseString import自xml2js的built-in方法。&lt;/p&gt;
&lt;p&gt;修改前：直接接收parseStrin</summary>
      
    
    
    
    <category term="Front-end" scheme="http://example.com/categories/Front-end/"/>
    
    
    <category term="Solved" scheme="http://example.com/tags/Solved/"/>
    
    <category term="JavaScript" scheme="http://example.com/tags/JavaScript/"/>
    
    <category term="Node.js" scheme="http://example.com/tags/Node-js/"/>
    
    <category term="Promise" scheme="http://example.com/tags/Promise/"/>
    
    <category term="await/async" scheme="http://example.com/tags/await-async/"/>
    
  </entry>
  
  <entry>
    <title>20211014 - encodeURI() 解决中文等字符报错的问题</title>
    <link href="http://example.com/2021/10/14/20211014%20-%20encodeURI()%20%E8%A7%A3%E5%86%B3%E4%B8%AD%E6%96%87%E7%AD%89%E5%AD%97%E7%AC%A6%E6%8A%A5%E9%94%99%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://example.com/2021/10/14/20211014%20-%20encodeURI()%20%E8%A7%A3%E5%86%B3%E4%B8%AD%E6%96%87%E7%AD%89%E5%AD%97%E7%AC%A6%E6%8A%A5%E9%94%99%E7%9A%84%E9%97%AE%E9%A2%98/</id>
    <published>2021-10-13T16:00:00.000Z</published>
    <updated>2022-02-24T07:51:53.861Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> item = <span class="built_in">encodeURI</span>(request.params.item)</span><br></pre></td></tr></table></figure><p>注意：要在server端，也就是在node.js里对搜索关键词加encodeURI()！在前端写无效哈哈，因为后端才是the one that 直接向API发送get请求的。</p><p>参考：</p><p><a href="https://stackoverflow.com/questions/31024779/typeerror-request-path-contains-unescaped-characters-how-can-i-fix-this/48535265">TypeError: Request path contains unescaped characters, how can I fix this</a></p><p><a href="https://zhuanlan.zhihu.com/p/141608348">nodejs请求Request path contains unescaped characters</a></p><p><a href="https://blog.csdn.net/weixin_47529373/article/details/115415639">错误解决： Request path contains unescaped characters_coderbin的博客-CSDN博客</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight jsx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class</summary>
      
    
    
    
    <category term="Front-end" scheme="http://example.com/categories/Front-end/"/>
    
    
    <category term="Solved" scheme="http://example.com/tags/Solved/"/>
    
    <category term="Node.js" scheme="http://example.com/tags/Node-js/"/>
    
    <category term="Ajax" scheme="http://example.com/tags/Ajax/"/>
    
  </entry>
  
  <entry>
    <title>20211013 - &#39;index.js1 Warning validateDOMNesting(...) figure cannot appear as a descendant of p.&#39;</title>
    <link href="http://example.com/2021/10/13/20211013%20-%20&#39;index.js1%20Warning%20validateDOMNesting(...)%20figure%20cannot%20appear%20as%20a%20descendant%20of%20p.&#39;/"/>
    <id>http://example.com/2021/10/13/20211013%20-%20&#39;index.js1%20Warning%20validateDOMNesting(...)%20figure%20cannot%20appear%20as%20a%20descendant%20of%20p.&#39;/</id>
    <published>2021-10-12T16:00:00.000Z</published>
    <updated>2022-02-24T07:40:21.257Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s3.us-west-2.amazonaws.com/secure.notion-static.com/15aa9a35-e59b-4ce6-9b95-f825eb23b6f2/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAT73L2G45EIPT3X45/20220224/us-west-2/s3/aws4_request&X-Amz-Date=20220224T073033Z&X-Amz-Expires=86400&X-Amz-Signature=0f6fb06933dca6de54c7e9a26caea6aa65d7229b49dc9f11cb953fe8478206ed&X-Amz-SignedHeaders=host&response-content-disposition=filename%20=%22Untitled.png%22&x-id=GetObject" alt="Untitled"></p><p>Material UI的Typography的variant默认body1，也就是component为<p>，而<p>只能包含行内元素。所以将component的值改为div就可以了。</p><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution:"></a>Solution:</h1><p><a href="https://stackoverflow.com/questions/41928567/div-cannot-appear-as-a-descendant-of-p">cannot appear as a descendant of</a></p><h2 id="Cool-explanations"><a href="#Cool-explanations" class="headerlink" title="Cool explanations:"></a>Cool explanations:</h2><p><img src="https://s3.us-west-2.amazonaws.com/secure.notion-static.com/bf6cc8c6-bea9-425f-8d5e-3c956355284a/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAT73L2G45EIPT3X45/20220224/us-west-2/s3/aws4_request&X-Amz-Date=20220224T073115Z&X-Amz-Expires=86400&X-Amz-Signature=7e0bac7f0606b282aae1bf62429beb161bb72a5eca52e72b70f70ad1ce75be07&X-Amz-SignedHeaders=host&response-content-disposition=filename%20=%22Untitled.png%22&x-id=GetObject"></p><p><img src="https://s3.us-west-2.amazonaws.com/secure.notion-static.com/1130513e-e057-49a1-b34b-a0f4b23c8a3f/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAT73L2G45EIPT3X45/20220224/us-west-2/s3/aws4_request&X-Amz-Date=20220224T073139Z&X-Amz-Expires=86400&X-Amz-Signature=cee55e5bb7688140b634b082996b80359cae43df472003c2bc4f26372566ba3f&X-Amz-SignedHeaders=host&response-content-disposition=filename%20=%22Untitled.png%22&x-id=GetObject"></p><h1 id="Reference："><a href="#Reference：" class="headerlink" title="Reference："></a>Reference：</h1><p><a href="https://stackoverflow.com/questions/21400823/why-doesnt-my-div-inside-a-span-work-properly/21400869">Why doesn’t my div inside a span work properly?</a></p><p><img src="https://s3.us-west-2.amazonaws.com/secure.notion-static.com/9423a665-8e3c-41b3-b3a4-dba6896cea20/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAT73L2G45EIPT3X45/20220224/us-west-2/s3/aws4_request&X-Amz-Date=20220224T073220Z&X-Amz-Expires=86400&X-Amz-Signature=2294bc060baa5632f2b799b1fcdd80ac8539edb17f1d3ca6b4e763417e4a6ef7&X-Amz-SignedHeaders=host&response-content-disposition=filename%20=%22Untitled.png%22&x-id=GetObject"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://s3.us-west-2.amazonaws.com/secure.notion-static.com/15aa9a35-e59b-4ce6-9b95-f825eb23b6f2/Untitled.png?X-Amz-Algorithm=A</summary>
      
    
    
    
    <category term="Front-end" scheme="http://example.com/categories/Front-end/"/>
    
    
    <category term="Solved" scheme="http://example.com/tags/Solved/"/>
    
    <category term="CSS" scheme="http://example.com/tags/CSS/"/>
    
    <category term="Material UI" scheme="http://example.com/tags/Material-UI/"/>
    
  </entry>
  
  <entry>
    <title>20211013 - about exact in react-router</title>
    <link href="http://example.com/2021/10/13/20211013%20-%20about%20exact%20in%20react-router/"/>
    <id>http://example.com/2021/10/13/20211013%20-%20about%20exact%20in%20react-router/</id>
    <published>2021-10-12T16:00:00.000Z</published>
    <updated>2022-02-24T07:40:14.754Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;Route exact path=<span class="string">&quot;/&quot;</span> component=&#123;Home&#125; /&gt;  <span class="comment">// explanation: / -&gt; Home; /blahblah -&gt; blank</span></span><br><span class="line">&lt;Route exact path=<span class="string">&quot;/:id&quot;</span> component=&#123;Pod&#125; /&gt;  <span class="comment">// explanation: /:id -&gt; Pod; /:id/blahblah -&gt; blank</span></span><br><span class="line">&lt;Route path=<span class="string">&quot;/&quot;</span> component=&#123;Home&#125; /&gt; <span class="comment">// explanation: / -&gt; Home; /blahblah -&gt; Home</span></span><br></pre></td></tr></table></figure><p>exact的意思是精确匹配路径</p><p>加上exact之后，表明只匹配到path里的内容为止，如果不加exact，往path后面加上内容也会匹配到相同的组件。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight jsx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;</summary>
      
    
    
    
    <category term="Front-end" scheme="http://example.com/categories/Front-end/"/>
    
    
    <category term="Solved" scheme="http://example.com/tags/Solved/"/>
    
    <category term="React router" scheme="http://example.com/tags/React-router/"/>
    
  </entry>
  
  <entry>
    <title>20211009 - can&#39;t get the value of e.target.id</title>
    <link href="http://example.com/2021/10/09/20211009%20-%20can&#39;t%20get%20the%20value%20of%20e.target.id/"/>
    <id>http://example.com/2021/10/09/20211009%20-%20can&#39;t%20get%20the%20value%20of%20e.target.id/</id>
    <published>2021-10-08T16:00:00.000Z</published>
    <updated>2022-02-24T07:39:52.724Z</updated>
    
    <content type="html"><![CDATA[<p>e.target.id取值不稳定，时有时无</p><p>e.target &amp; e.currentTaget</p><blockquote><p>target is the element that triggered the event (e.g., the user clicked on)<br>currentTarget is the element that the event listener is attached to.</p></blockquote><p><a href="https://stackoverflow.com/questions/5921413/difference-between-e-target-and-e-currenttarget">Difference between e.target and e.currentTarget</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;e.target.id取值不稳定，时有时无&lt;/p&gt;
&lt;p&gt;e.target &amp;amp; e.currentTaget&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;target is the element that triggered the event (e.g., the </summary>
      
    
    
    
    <category term="Front-end" scheme="http://example.com/categories/Front-end/"/>
    
    
    <category term="Solved" scheme="http://example.com/tags/Solved/"/>
    
    <category term="DOM" scheme="http://example.com/tags/DOM/"/>
    
  </entry>
  
  <entry>
    <title>20211009 - onClick() event传参</title>
    <link href="http://example.com/2021/10/09/20211009%20-%20onClick()%20event%E4%BC%A0%E5%8F%82/"/>
    <id>http://example.com/2021/10/09/20211009%20-%20onClick()%20event%E4%BC%A0%E5%8F%82/</id>
    <published>2021-10-08T16:00:00.000Z</published>
    <updated>2022-02-24T07:40:05.638Z</updated>
    
    <content type="html"><![CDATA[<p>This helped!!!</p><p><img src="https://s3.us-west-2.amazonaws.com/secure.notion-static.com/bcf2a829-9857-42fb-846a-4992f2110bf0/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAT73L2G45EIPT3X45/20220224/us-west-2/s3/aws4_request&X-Amz-Date=20220224T072029Z&X-Amz-Expires=86400&X-Amz-Signature=c36f6e7d97f8bdce772fb9fdb31740bfd44e324414766315e8eb6ac1a189096c&X-Amz-SignedHeaders=host&response-content-disposition=filename%20=%22Untitled.png%22&x-id=GetObject"></p><p><a href="https://stackoverflow.com/questions/55720466/typeerror-cannot-read-property-target-of-undefined">TypeError: Cannot read property ‘target’ of undefined</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;This helped!!!&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://s3.us-west-2.amazonaws.com/secure.notion-static.com/bcf2a829-9857-42fb-846a-4992f2110bf0/Untitled</summary>
      
    
    
    
    <category term="Front-end" scheme="http://example.com/categories/Front-end/"/>
    
    
    <category term="React" scheme="http://example.com/tags/React/"/>
    
    <category term="Solved" scheme="http://example.com/tags/Solved/"/>
    
    <category term="JavaScript" scheme="http://example.com/tags/JavaScript/"/>
    
    <category term="Arrow function" scheme="http://example.com/tags/Arrow-function/"/>
    
    <category term="Closure" scheme="http://example.com/tags/Closure/"/>
    
  </entry>
  
  <entry>
    <title>20211009 - multiple onClick() events</title>
    <link href="http://example.com/2021/10/09/20211009%20-%20multiple%20onClick()%20events/"/>
    <id>http://example.com/2021/10/09/20211009%20-%20multiple%20onClick()%20events/</id>
    <published>2021-10-08T16:00:00.000Z</published>
    <updated>2022-02-24T07:39:58.925Z</updated>
    
    <content type="html"><![CDATA[<p>This helped!!!</p><p><img src="https://s3.us-west-2.amazonaws.com/secure.notion-static.com/064d5a0e-3e38-4381-936e-eb6b0c947017/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAT73L2G45EIPT3X45/20220224/us-west-2/s3/aws4_request&X-Amz-Date=20220224T071626Z&X-Amz-Expires=86400&X-Amz-Signature=17ffe169c746258d313799cec5034661b5576632cdeef2a8f496014d267e195b&X-Amz-SignedHeaders=host&response-content-disposition=filename%20=%22Untitled.png%22&x-id=GetObject"></p><p><a href="https://stackoverflow.com/questions/26069238/call-multiple-functions-onclick-reactjs">Call multiple functions onClick ReactJS</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;This helped!!!&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://s3.us-west-2.amazonaws.com/secure.notion-static.com/064d5a0e-3e38-4381-936e-eb6b0c947017/Untitled</summary>
      
    
    
    
    <category term="Front-end" scheme="http://example.com/categories/Front-end/"/>
    
    
    <category term="React" scheme="http://example.com/tags/React/"/>
    
    <category term="Solved" scheme="http://example.com/tags/Solved/"/>
    
    <category term="JavaScript" scheme="http://example.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>20210917 - findByIdAndUpdate does not run validations</title>
    <link href="http://example.com/2021/09/17/20210917%20-%20findByIdAndUpdate%20does%20not%20run%20validations/"/>
    <id>http://example.com/2021/09/17/20210917%20-%20findByIdAndUpdate%20does%20not%20run%20validations/</id>
    <published>2021-09-16T16:00:00.000Z</published>
    <updated>2022-02-22T11:16:57.322Z</updated>
    
    <content type="html"><![CDATA[<p>在创建Schema时应用了Validations，设置了required、minlength、unique等等限制。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> personSchema = <span class="keyword">new</span> mongoose.Schema(&#123;</span><br><span class="line">  name: &#123;</span><br><span class="line">    type: <span class="built_in">String</span>,</span><br><span class="line">    required: [<span class="literal">true</span>, <span class="string">&#x27;The name is required&#x27;</span>],</span><br><span class="line">    unique: <span class="literal">true</span>,</span><br><span class="line">    minlength: [<span class="number">3</span>, <span class="string">&#x27;The name has to be at least three characters long&#x27;</span>]</span><br><span class="line">  &#125;,</span><br><span class="line">  number: &#123;</span><br><span class="line">    type: <span class="built_in">String</span>,</span><br><span class="line">    required: [<span class="literal">true</span>, <span class="string">&#x27;The phone number is required&#x27;</span>],</span><br><span class="line">    minlength: [<span class="number">8</span>, <span class="string">&#x27;The phone number must have at least 8 digits&#x27;</span>]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">personSchema.plugin(uniqueValidator)</span><br></pre></td></tr></table></figure><p>在POST请求也就是创建新联系人的时候的确有用（大概是用了save()的缘故？）。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">app.post(<span class="string">&#x27;/api/persons&#x27;</span>, <span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> body = req.body</span><br><span class="line">  <span class="built_in">console</span>.log(body)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> person = <span class="keyword">new</span> Person(&#123;</span><br><span class="line">    name: body.name,</span><br><span class="line">    number: body.number,</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="built_in">console</span>.log(person)</span><br><span class="line"></span><br><span class="line">  person.**save()**</span><br><span class="line">    .then(<span class="function"><span class="params">savedPerson</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(savedPerson)</span><br><span class="line">      <span class="keyword">return</span> savedPerson.toJSON()</span><br><span class="line">    &#125;)</span><br><span class="line">    .then(<span class="function"><span class="params">savedAndFormattedPerson</span> =&gt;</span> &#123;</span><br><span class="line">      res.json(savedAndFormattedPerson)</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch(<span class="function"><span class="params">error</span> =&gt;</span> next(error))</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>但如果要修改（PUT请求）联系人信息，Validations就无法生效了。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">app.put(<span class="string">&#x27;/api/persons/:id&#x27;</span>, <span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> body = req.body</span><br><span class="line">  <span class="keyword">const</span> person = &#123;</span><br><span class="line">    name: body.name,</span><br><span class="line">    number: body.number,</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  Person.findByIdAndUpdate(req.params.id, person, &#123;<span class="attr">new</span>: <span class="literal">true</span>&#125;)</span><br><span class="line">    .then(<span class="function"><span class="params">updatedPerson</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (updatedPerson) &#123;</span><br><span class="line">        res.json(updatedPerson)</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        res.status(<span class="number">404</span>).end()</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch(<span class="function"><span class="params">error</span> =&gt;</span> next(error))</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>查了Mongoose文档：</p><blockquote><p>runValidators: if true, runs update validators on this command. Update validators validate the update operation against the model’s schema.</p></blockquote><p><a href="https://mongoosejs.com/docs/api/model.html#model_Model.findByIdAndUpdate">Mongoose v6.0.6:</a></p><p>以及相关问答：</p><p><a href="https://stackoverflow.com/questions/31794558/mongoose-findbyidandupdate-not-running-validations-on-subdocuments">Mongoose findByIdAndUpdate not running validations on subdocuments</a></p><blockquote><p>According to the documentation, validators seems to work only for update() and findOneAndUpdate() if runValidators is set to true.</p></blockquote><p>但其实文档里也说过findByAndUpdate也可以支持有限的validation的。。。（可能这个回答时间比较久远了，现在好像是可行的）</p><p>见下：</p><h1 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h1><p><code>findOneAndX</code> and <code>findByIdAndX</code> functions support limited validation that you can enable by setting the <code>runValidators</code> option.</p><p>If you need full-fledged validation, use the traditional approach of first retrieving the document.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> doc = <span class="keyword">await</span> Model.findById(id);</span><br><span class="line">doc.name = <span class="string">&#x27;jason bourne&#x27;</span>;</span><br><span class="line"><span class="keyword">await</span> doc.save();</span><br></pre></td></tr></table></figure><p>按照文档试了一下好像确实可以</p><p>修改后的PUT代码部分</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">app.put(<span class="string">&#x27;/api/persons/:id&#x27;</span>, <span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> body = req.body</span><br><span class="line">  <span class="keyword">const</span> person = &#123;</span><br><span class="line">    name: body.name,</span><br><span class="line">    number: body.number,</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  Person.findByIdAndUpdate(req.params.id, person, **&#123;<span class="attr">new</span>: <span class="literal">true</span>, <span class="attr">runValidators</span>: <span class="literal">true</span>&#125;**)</span><br><span class="line">    .then(<span class="function"><span class="params">updatedPerson</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (updatedPerson) &#123;</span><br><span class="line">        res.json(updatedPerson)</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        res.status(<span class="number">404</span>).end()</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch(<span class="function"><span class="params">error</span> =&gt;</span> next(error))</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><img src="https://s3.us-west-2.amazonaws.com/secure.notion-static.com/bf63b330-67fe-4fcc-a6b8-ab75f5993951/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAT73L2G45EIPT3X45/20220222/us-west-2/s3/aws4_request&X-Amz-Date=20220222T111549Z&X-Amz-Expires=86400&X-Amz-Signature=5a795b9ce00d54a601d5579a01fe9bbfb23826e168c7fda2eadf6e16e8f565de&X-Amz-SignedHeaders=host&response-content-disposition=filename%20=%22Untitled.png%22&x-id=GetObject" alt="Untitled"></p><p>前端也作了修改，加了if-else判断error的类型后再输出报错的message，也不知道在异步方法下加判断会不会有坑，但功能上是实现了的。相关代码如下：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">personService</span><br><span class="line">       .update(samePerson.id, changedPerson)</span><br><span class="line">       .then(<span class="function"><span class="params">returnedPerson</span> =&gt;</span> &#123;</span><br><span class="line">         <span class="built_in">console</span>.log(returnedPerson)</span><br><span class="line">         setPersons(persons.map(<span class="function"><span class="params">person</span> =&gt;</span> person.id === samePerson.id ? returnedPerson : person))</span><br><span class="line">         setNewName(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">         setNewNumber(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">         setError(<span class="literal">false</span>)</span><br><span class="line">         setMessage(</span><br><span class="line">           <span class="string">`Updated <span class="subst">$&#123;returnedPerson.name&#125;</span>&#x27;s number`</span></span><br><span class="line">         )</span><br><span class="line">         <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">           setMessage(<span class="literal">null</span>)</span><br><span class="line">         &#125;, <span class="number">5000</span>)</span><br><span class="line">       &#125;)</span><br><span class="line">       .catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">         <span class="built_in">console</span>.log(error.response.data.error)</span><br><span class="line">         **<span class="keyword">if</span> (error.response.data.error) &#123;</span><br><span class="line">           setMessage(</span><br><span class="line">             <span class="string">`<span class="subst">$&#123;error.response.data.error&#125;</span>`</span></span><br><span class="line">           )</span><br><span class="line">           <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">             setMessage(<span class="literal">null</span>)</span><br><span class="line">           &#125;, <span class="number">5000</span>)</span><br><span class="line">           setError(<span class="literal">true</span>)</span><br><span class="line">           setNewName(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">           setNewNumber(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">         &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">           setMessage(</span><br><span class="line">             <span class="string">`Information of <span class="subst">$&#123;samePerson.name&#125;</span> has already been removed from server`</span></span><br><span class="line">           )</span><br><span class="line">           <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">             setMessage(<span class="literal">null</span>)</span><br><span class="line">           &#125;, <span class="number">5000</span>);</span><br><span class="line">           setPersons(persons.filter(<span class="function"><span class="params">person</span> =&gt;</span> person.name !== newName))</span><br><span class="line">           setNewName(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">           setNewNumber(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">           setError(<span class="literal">true</span>)</span><br><span class="line">         &#125;**</span><br><span class="line">       &#125;)</span><br></pre></td></tr></table></figure><p>降低冗余后：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> samePerson = persons.find(<span class="function"><span class="params">person</span> =&gt;</span> person.name === newName)</span><br><span class="line">      <span class="keyword">const</span> changedPerson = &#123; ...samePerson, <span class="attr">number</span>: newNumber &#125;</span><br><span class="line"></span><br><span class="line">      personService</span><br><span class="line">        .update(samePerson.id, changedPerson)</span><br><span class="line">        .then(<span class="function"><span class="params">returnedPerson</span> =&gt;</span> &#123;</span><br><span class="line">          <span class="built_in">console</span>.log(returnedPerson)</span><br><span class="line">          setPersons(persons.map(<span class="function"><span class="params">person</span> =&gt;</span> person.id === samePerson.id ? returnedPerson : person))</span><br><span class="line">          setNewName(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">          setNewNumber(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">          setError(<span class="literal">false</span>)</span><br><span class="line">          setMessage(</span><br><span class="line">            <span class="string">`Updated <span class="subst">$&#123;returnedPerson.name&#125;</span>&#x27;s number`</span></span><br><span class="line">          )</span><br><span class="line">          <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            setMessage(<span class="literal">null</span>)</span><br><span class="line">          &#125;, <span class="number">5000</span>)</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">          <span class="comment">// console.log(error.response.data.error)</span></span><br><span class="line">          **<span class="keyword">if</span> (error.response.data.error) &#123;</span><br><span class="line">            setMessage(</span><br><span class="line">              <span class="string">`<span class="subst">$&#123;error.response.data.error&#125;</span>`</span></span><br><span class="line">            )</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            setMessage(</span><br><span class="line">              <span class="string">`Information of <span class="subst">$&#123;samePerson.name&#125;</span> has already been removed from server`</span></span><br><span class="line">            )</span><br><span class="line">            setPersons(persons.filter(<span class="function"><span class="params">person</span> =&gt;</span> person.name !== newName))</span><br><span class="line">          &#125;</span><br><span class="line">          </span><br><span class="line">          <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            setMessage(<span class="literal">null</span>)</span><br><span class="line">          &#125;, <span class="number">5000</span>)</span><br><span class="line">          setError(<span class="literal">true</span>)</span><br><span class="line">          setNewName(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">          setNewNumber(<span class="string">&#x27;&#x27;</span>)**</span><br><span class="line">        &#125;)</span><br></pre></td></tr></table></figure><p><img src="https://s3.us-west-2.amazonaws.com/secure.notion-static.com/3611b493-696b-4f8a-a2d0-91a55f7d5950/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAT73L2G45EIPT3X45/20220222/us-west-2/s3/aws4_request&X-Amz-Date=20220222T111619Z&X-Amz-Expires=86400&X-Amz-Signature=c98beab3d2f076e08d0c5b1eb657f617d327aa5db3501b42c142ac5d60aa5b64&X-Amz-SignedHeaders=host&response-content-disposition=filename%20=%22Untitled.png%22&x-id=GetObject" alt="Untitled"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在创建Schema时应用了Validations，设置了required、minlength、unique等等限制。&lt;/p&gt;
&lt;figure class=&quot;highlight jsx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span cla</summary>
      
    
    
    
    <category term="Front-end" scheme="http://example.com/categories/Front-end/"/>
    
    
    <category term="React" scheme="http://example.com/tags/React/"/>
    
    <category term="Solved" scheme="http://example.com/tags/Solved/"/>
    
    <category term="MongoDB" scheme="http://example.com/tags/MongoDB/"/>
    
    <category term="Mongoose" scheme="http://example.com/tags/Mongoose/"/>
    
  </entry>
  
</feed>
