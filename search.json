[{"title":"关于选择器优先级和继承的概念","url":"/2021/07/15/CSS1/","content":"\n## 前言\n\n最近在读《深入解析CSS》。\n\n读到第2章的时候发现自己对于选择器优先级的概念和继承的概念混为一谈了。\n\n借用第2章“自定义属性”的例子，利用自定义属性为两块面板设置不同的颜色。我的困惑出现在给第二个面板设置不同字体颜色和背景颜色后，第二个面板原来的字体颜色和背景颜色都被新颜色覆盖。\n\n当时的想法是：`:root`是伪类选择器，优先级相当于类，`.dark`是类选择器，二者优先级相等，然后考虑代码顺序，但将`:root`声明块移至`.dark`下面，发现效果还是和之前一样。为了进一步明确我的困惑，在外层又加了一个`id=\"test\"`的div元素，定义了自定义属性，设置不同的颜色，此时`#test`的优先级高于`.dark`，总该会出现`#test`的效果了吧，结果却还是和之前一样。\n\n上面的”折腾“忽略了一个很重要的前提：**上述的选择器并非作用于同一个元素**。因此考虑它们的优先级是毫无意义的。\n\nHTML部分：\n\n```html\n<body>\n    <div id=\"test\">\n        <div class=\"panel\">\n            <h2>Single-origin</h2>\n            <div class=\"body\">\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Aperiam cumque deserunt omnis sed autem molestias et reprehenderit voluptatum odit voluptas fugiat reiciendis, corrupti nihil maiores. Pariatur laboriosam doloribus aspernatur. Accusamus!\n            </div>\n        </div>\n\n        <aside class=\"dark\">\n            <div class=\"panel\">\n                <h2>Single-origin</h2>\n                <div class=\"body\">\n                    Lorem ipsum dolor sit amet consectetur adipisicing elit. Aspernatur sunt perspiciatis fugit. Fuga nostrum ea error, autem officiis dolores tenetur necessitatibus doloribus mollitia qui veritatis cumque, saepe impedit inventore ab?\n                </div>\n            </div>\n        </aside>\n    </div>\n</body>\n```\n\n\n\nCSS部分：\n\n```css\n:root {\n    --main-bg: #fff;\n    --main-color: #000;\n}\n\n#test {\n    --main-bg: #365;\n    --main-color: #000;\n}\n\n.panel {\n    font-size: 1rem;\n    padding: 1em;\n    border: 1px solid #999;\n    border-radius: .5em;\n    background-color: var(--main-bg);\n    color: var(--main-color);\n}\n\n.panel > h2 {\n    margin-top: 0;\n    font-size: .8em;\n    font-weight: bold;\n    text-transform: uppercase;\n}\n\n.dark {\n    margin-top: 2em;\n    padding: 1em;\n    background-color: #999;\n    --main-bg: #333;\n    --main-color: #fff;\n}\n```\n\n\n\n## 总结\n\n选择器优先级和继承，最终出现的效果可能都会导致原来的样式被覆盖，但两者是不同的概念，目的不同，手段不同。\n\n选择器优先级本质上是用来解决声明冲突的规则。因此在考虑选择器优先级的时候，首先看这两个选择器是否都（至少）作用于同一个元素，因为只有作用于同一个元素才有可能发生声明冲突，如果作用于同一个元素，那么就根据优先级规则预测元素的效果；继承本质上是添加样式的一种方式，与选择器的优先级和声明块的顺序没有直接关系。如果一个元素的某个属性（可继承的属性）没有层叠值，则会继承父元素的值，将属性加到body上会在整个网页上生效，而将属性加到特定元素上，则只会被它的后代元素继承，并且继承属性会顺序传递给后代元素，直到它被层叠值覆盖。","tags":["CSS"],"categories":["Front-end"]},{"title":"Objects","url":"/2021/07/07/js-book1-note2/","content":"\n","tags":["JavaScript"],"categories":["Front-end"]},{"title":"Operator","url":"/2021/07/07/js-book1-note1/","content":"\n# Boolean\n\n```\nconsole.log(!false);  //true\nconsole.log(!\"blue\");  //false\nconsole.log(!0);  //true\nconsole.log(!NaN);  //true\nconsole.log(!\"\");  //true\nconsole.log(!12345);  //false\n```\n\n","tags":["JavaScript"],"categories":["Front-end"]},{"title":"Hello World","url":"/2021/03/31/hello-world/","content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n\n```javascript\nconst a = 0;\n```\n\n```css\n.outer {\n      position: relative;\n}\n\n.inner {\n      width: 200px;\n      height: 200px;\n      border-radius: 50%;\n      position: absolute;\n      top: calc(50% - 100px);\n      left: calc(50% - 100px);\n}\n```\n\n\n\n> wd\n\n```html\ndsdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd\n```\n\n","tags":["test"],"categories":["111"]},{"title":"Template","url":"/1900/01/01/template/","content":"\n# Template","tags":["template"],"categories":["Template"]}]